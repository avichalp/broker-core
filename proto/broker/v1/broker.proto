syntax = "proto3";
package broker.v1;
option go_package = "github.com/textileio/broker-core/gen/broker/v1;broker";

import "google/protobuf/timestamp.proto";
import "broker/auctioneer/v1/auctioneer.proto";

message CreateBrokerRequestRequest {
  string cid = 1;
  BrokerRequest.Metadata meta = 2;
}

message CreateBrokerRequestResponse {
  BrokerRequest request = 1;
}

message GetBrokerRequestRequest {
  string id = 1;
}

message GetBrokerRequestResponse {
  BrokerRequest broker_request = 1;
}

message CreateStorageDealRequest {
  string batch_cid = 1;
  repeated string broker_request_ids = 2;
}

message CreateStorageDealResponse {
  string id = 1;
}

message StorageDealAuctionedRequest {
  broker.auctioneer.v1.Auction auction = 2;
}

message StorageDealAuctionedResponse {
}

message StorageDealFinalizedDealsRequest {
  repeated FinalizedDeal finalized_deals = 1;

  message FinalizedDeal {
    string storage_deal_id = 1;
    int64 deal_id = 2;
    uint64 deal_expiration = 3;
    string error_cause = 4;
  }
}

message StorageDealFinalizedDealsResponse {
}

message BrokerRequest {
  string id = 1;
  string data_cid = 2;
  Status status = 3;
  Metadata meta = 4;
  string storage_deal_id = 5;
  google.protobuf.Timestamp created_at = 6; 
  google.protobuf.Timestamp updated_at = 7; 

  enum Status {
    UNSPECIFIED = 0;
    BATCHING = 1;
    PREPARING = 2;
    AUCTIONING = 3;
    DEALMAKING = 4;
    SUCCESS = 5;
  }

  message Metadata {
    string region = 1;
  }
}

service APIService {
  rpc CreateBrokerRequest(CreateBrokerRequestRequest) returns (CreateBrokerRequestResponse) {}
  rpc GetBrokerRequest(GetBrokerRequestRequest) returns (GetBrokerRequestResponse) {}
  rpc CreateStorageDeal(CreateStorageDealRequest) returns (CreateStorageDealResponse) {}
  rpc StorageDealAuctioned(StorageDealAuctionedRequest) returns (StorageDealAuctionedResponse) {}
  rpc StorageDealFinalizedDeals(StorageDealFinalizedDealsRequest) returns (StorageDealFinalizedDealsResponse) {}
}


