// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	cid "github.com/ipfs/go-cid"
	broker "github.com/textileio/broker-core/broker"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// BrokerRequestor is an autogenerated mock type for the BrokerRequestor type
type BrokerRequestor struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, c, meta, pc
func (_m *BrokerRequestor) Create(ctx context.Context, c cid.Cid, meta broker.Metadata, pc *broker.PreparedCAR) (broker.BrokerRequest, error) {
	ret := _m.Called(ctx, c, meta, pc)

	var r0 broker.BrokerRequest
	if rf, ok := ret.Get(0).(func(context.Context, cid.Cid, broker.Metadata, *broker.PreparedCAR) broker.BrokerRequest); ok {
		r0 = rf(ctx, c, meta, pc)
	} else {
		r0 = ret.Get(0).(broker.BrokerRequest)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, cid.Cid, broker.Metadata, *broker.PreparedCAR) error); ok {
		r1 = rf(ctx, c, meta, pc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: ctx, ID
func (_m *BrokerRequestor) Get(ctx context.Context, ID broker.BrokerRequestID) (broker.BrokerRequest, error) {
	ret := _m.Called(ctx, ID)

	var r0 broker.BrokerRequest
	if rf, ok := ret.Get(0).(func(context.Context, broker.BrokerRequestID) broker.BrokerRequest); ok {
		r0 = rf(ctx, ID)
	} else {
		r0 = ret.Get(0).(broker.BrokerRequest)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, broker.BrokerRequestID) error); ok {
		r1 = rf(ctx, ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
