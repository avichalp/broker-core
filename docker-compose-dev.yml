version: "3"
services:
  authd:
    build:
      context: .
      dockerfile: ./cmd/authd/Dockerfile
    platform: linux/amd64
    environment:
      - AUTH_RPC_ADDR=:5000
      - AUTH_NEAR_ADDR=neard:5000
      - AUTH_DEBUG=true
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - neard
  neard:
    build:
      context: .
      dockerfile: ./cmd/neard/Dockerfile
    platform: linux/amd64
    environment:
      - NEAR_RPC_ADDR=:5000
      - NEAR_DEBUG=true
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
  storaged:
    build:
      context: .
      dockerfile: ./cmd/storaged/Dockerfile
    platform: linux/amd64
    environment:
      - STORAGE_DEBUG=true
      - STORAGE_HTTP_ADDR=:8888
      - STORAGE_UPLOADER_IPFS_MULTIADDR=/dns4/ipfs/tcp/5001
      - STORAGE_BROKER_ADDR=brokerd:5000
      - STORAGE_AUTH_ADDR=authd:5000
    ports:
      - "127.0.0.1:8888:8888"
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - brokerd
      - authd
  auctioneerd:
    build:
      context: .
      dockerfile: ./cmd/auctioneerd/Dockerfile
    platform: linux/amd64
    volumes:
      - "${REPO_PATH}/auctioneerd:/data/auctioneerd"
    environment:
      - AUCTIONEER_DEBUG=true
      - AUCTIONEER_RPC_ADDR=:5000
      - AUCTIONEER_BROKER_ADDR=brokerd:5000
      - AUCTIONEER_AUCTION_DURATION=10000000000
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - brokerd
  minerd:
    build:
      context: .
      dockerfile: ./cmd/minerd/Dockerfile
    platform: linux/amd64
    volumes:
      - "${REPO_PATH}/minerd:/data/minerd"
    environment:
      - MINER_DEBUG=true
      - MINER_ASK_PRICE=100000000000
      - MINER_DEAL_DURATION_MIN=525600
      - MINER_DEAL_DURATION_MAX=1051200
      - MINER_DEAL_SIZE_MIN=57344
      - MINER_DEAL_SIZE_MAX=32000000000
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
  brokerd:
    build:
      context: .
      dockerfile: ./cmd/brokerd/Dockerfile
    platform: linux/amd64
    environment:
      - BROKER_DEBUG=true
      - BROKER_RPC_ADDR=:5000
      - BROKER_MONGO_URI=mongodb://mongo:27017
      - BROKER_MONGO_DBNAME=brokerd
      - BROKER_IPFS_MULTIADDR=/dns4/ipfs/tcp/5001
      - BROKER_PACKER_ADDR=packerd:5000
      - BROKER_AUCTIONEER_ADDR=auctioneerd:5000
      - BROKER_DEALER_ADDR=dealerd:5000
      - BROKER_DEAL_EPOCHS=1051200
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - packerd
      - mongo
      - ipfs
  packerd:
    build:
      context: .
      dockerfile: ./cmd/packerd/Dockerfile
    platform: linux/amd64
    environment:
      - PACKER_DEBUG=true
      - PACKER_RPC_ADDR=:5000
      - PACKER_MONGO_URI=mongodb://mongo:27017
      - PACKER_MONGO_DBNAME=packerd
      - PACKER_IPFS_MULTIADDR=/dns4/ipfs/tcp/5001
      - PACKER_BROKER_ADDR=brokerd:5000
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - mongo
      - ipfs
  dealerd:
    build:
      context: .
      dockerfile: ./cmd/dealerd/Dockerfile
    platform: linux/amd64
    environment:
      - DEALER_DEBUG=true
      - DEALER_RPC_ADDR=:5000
      - DEALER_MONGO_URI=mongodb://mongo:27017
      - DEALER_MONGO_DBNAME=dealerd
      - DEALER_BROKER_ADDR=brokerd:5000
      - DEALER_MOCK=true
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - brokerd

  mongo:
    image: mongo:latest
    platform: linux/amd64
    ports:
      - "127.0.0.1:27017:27017"
    logging:
      driver: none
    command:
      - /bin/bash
      - -c
      - |
        /usr/bin/mongod --fork --logpath /var/log/mongod.log --bind_ip_all --replSet rs0
        mongo --eval 'rs.initiate({_id: "rs0", version: 1, members: [{ _id: 0, host: "mongo:27017" }]})'
        tail -f /var/log/mongod.log
  ipfs:
    image: ipfs/go-ipfs:v0.8.0
    platform: linux/amd64
    environment:
      - IPFS_PROFILE=test
    ports:
      - "4001:4001"
      - "4001:4001/udp"
      - "127.0.0.1:5001:5001"
      - "127.0.0.1:8080:8080"
