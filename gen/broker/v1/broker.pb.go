// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.2
// source: broker/v1/broker.proto

package broker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuctionClosed_Status int32

const (
	AuctionClosed_STATUS_UNSPECIFIED AuctionClosed_Status = 0
	AuctionClosed_STATUS_QUEUED      AuctionClosed_Status = 1
	AuctionClosed_STATUS_STARTED     AuctionClosed_Status = 2
	AuctionClosed_STATUS_FINALIZED   AuctionClosed_Status = 3
)

// Enum value maps for AuctionClosed_Status.
var (
	AuctionClosed_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_QUEUED",
		2: "STATUS_STARTED",
		3: "STATUS_FINALIZED",
	}
	AuctionClosed_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_QUEUED":      1,
		"STATUS_STARTED":     2,
		"STATUS_FINALIZED":   3,
	}
)

func (x AuctionClosed_Status) Enum() *AuctionClosed_Status {
	p := new(AuctionClosed_Status)
	*p = x
	return p
}

func (x AuctionClosed_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuctionClosed_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_broker_v1_broker_proto_enumTypes[0].Descriptor()
}

func (AuctionClosed_Status) Type() protoreflect.EnumType {
	return &file_broker_v1_broker_proto_enumTypes[0]
}

func (x AuctionClosed_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuctionClosed_Status.Descriptor instead.
func (AuctionClosed_Status) EnumDescriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{12, 0}
}

type BrokerRequest_Status int32

const (
	BrokerRequest_UNSPECIFIED BrokerRequest_Status = 0
	BrokerRequest_BATCHING    BrokerRequest_Status = 1
	BrokerRequest_PREPARING   BrokerRequest_Status = 2
	BrokerRequest_AUCTIONING  BrokerRequest_Status = 3
	BrokerRequest_DEALMAKING  BrokerRequest_Status = 4
	BrokerRequest_SUCCESS     BrokerRequest_Status = 5
	BrokerRequest_ERROR       BrokerRequest_Status = 6
)

// Enum value maps for BrokerRequest_Status.
var (
	BrokerRequest_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "BATCHING",
		2: "PREPARING",
		3: "AUCTIONING",
		4: "DEALMAKING",
		5: "SUCCESS",
		6: "ERROR",
	}
	BrokerRequest_Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"BATCHING":    1,
		"PREPARING":   2,
		"AUCTIONING":  3,
		"DEALMAKING":  4,
		"SUCCESS":     5,
		"ERROR":       6,
	}
)

func (x BrokerRequest_Status) Enum() *BrokerRequest_Status {
	p := new(BrokerRequest_Status)
	*p = x
	return p
}

func (x BrokerRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrokerRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_broker_v1_broker_proto_enumTypes[1].Descriptor()
}

func (BrokerRequest_Status) Type() protoreflect.EnumType {
	return &file_broker_v1_broker_proto_enumTypes[1]
}

func (x BrokerRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrokerRequest_Status.Descriptor instead.
func (BrokerRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{15, 0}
}

type CreateBrokerRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *CreateBrokerRequestRequest) Reset() {
	*x = CreateBrokerRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBrokerRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrokerRequestRequest) ProtoMessage() {}

func (x *CreateBrokerRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrokerRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateBrokerRequestRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBrokerRequestRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type CreateBrokerRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *BrokerRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *CreateBrokerRequestResponse) Reset() {
	*x = CreateBrokerRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBrokerRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrokerRequestResponse) ProtoMessage() {}

func (x *CreateBrokerRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrokerRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateBrokerRequestResponse) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBrokerRequestResponse) GetRequest() *BrokerRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreatePreparedBrokerRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid         string                                          `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	PreparedCAR *CreatePreparedBrokerRequestRequest_PreparedCAR `protobuf:"bytes,2,opt,name=preparedCAR,proto3" json:"preparedCAR,omitempty"`
}

func (x *CreatePreparedBrokerRequestRequest) Reset() {
	*x = CreatePreparedBrokerRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedBrokerRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedBrokerRequestRequest) ProtoMessage() {}

func (x *CreatePreparedBrokerRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedBrokerRequestRequest.ProtoReflect.Descriptor instead.
func (*CreatePreparedBrokerRequestRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePreparedBrokerRequestRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CreatePreparedBrokerRequestRequest) GetPreparedCAR() *CreatePreparedBrokerRequestRequest_PreparedCAR {
	if x != nil {
		return x.PreparedCAR
	}
	return nil
}

type CreatePreparedBrokerRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *BrokerRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *CreatePreparedBrokerRequestResponse) Reset() {
	*x = CreatePreparedBrokerRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedBrokerRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedBrokerRequestResponse) ProtoMessage() {}

func (x *CreatePreparedBrokerRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedBrokerRequestResponse.ProtoReflect.Descriptor instead.
func (*CreatePreparedBrokerRequestResponse) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePreparedBrokerRequestResponse) GetRequest() *BrokerRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetBrokerRequestInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBrokerRequestInfoRequest) Reset() {
	*x = GetBrokerRequestInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrokerRequestInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrokerRequestInfoRequest) ProtoMessage() {}

func (x *GetBrokerRequestInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrokerRequestInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBrokerRequestInfoRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{4}
}

func (x *GetBrokerRequestInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBrokerRequestInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokerRequest *BrokerRequest                                    `protobuf:"bytes,1,opt,name=broker_request,json=brokerRequest,proto3" json:"broker_request,omitempty"`
	Deals         []*GetBrokerRequestInfoResponse_BrokerRequestDeal `protobuf:"bytes,2,rep,name=deals,proto3" json:"deals,omitempty"`
}

func (x *GetBrokerRequestInfoResponse) Reset() {
	*x = GetBrokerRequestInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrokerRequestInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrokerRequestInfoResponse) ProtoMessage() {}

func (x *GetBrokerRequestInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrokerRequestInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBrokerRequestInfoResponse) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{5}
}

func (x *GetBrokerRequestInfoResponse) GetBrokerRequest() *BrokerRequest {
	if x != nil {
		return x.BrokerRequest
	}
	return nil
}

func (x *GetBrokerRequestInfoResponse) GetDeals() []*GetBrokerRequestInfoResponse_BrokerRequestDeal {
	if x != nil {
		return x.Deals
	}
	return nil
}

type Sources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarUrl  *Sources_CARURL  `protobuf:"bytes,1,opt,name=car_url,json=carUrl,proto3" json:"car_url,omitempty"`
	CarIpfs *Sources_CARIPFS `protobuf:"bytes,2,opt,name=car_ipfs,json=carIpfs,proto3" json:"car_ipfs,omitempty"`
}

func (x *Sources) Reset() {
	*x = Sources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sources) ProtoMessage() {}

func (x *Sources) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sources.ProtoReflect.Descriptor instead.
func (*Sources) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{6}
}

func (x *Sources) GetCarUrl() *Sources_CARURL {
	if x != nil {
		return x.CarUrl
	}
	return nil
}

func (x *Sources) GetCarIpfs() *Sources_CARIPFS {
	if x != nil {
		return x.CarIpfs
	}
	return nil
}

type ReadyToAuction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StorageDealId    string   `protobuf:"bytes,2,opt,name=storage_deal_id,json=storageDealId,proto3" json:"storage_deal_id,omitempty"`
	PayloadCid       []byte   `protobuf:"bytes,3,opt,name=payload_cid,json=payloadCid,proto3" json:"payload_cid,omitempty"`
	DealSize         uint64   `protobuf:"varint,4,opt,name=deal_size,json=dealSize,proto3" json:"deal_size,omitempty"`
	DealDuration     uint64   `protobuf:"varint,5,opt,name=deal_duration,json=dealDuration,proto3" json:"deal_duration,omitempty"`
	DealReplication  uint32   `protobuf:"varint,6,opt,name=deal_replication,json=dealReplication,proto3" json:"deal_replication,omitempty"`
	DealVerified     bool     `protobuf:"varint,7,opt,name=deal_verified,json=dealVerified,proto3" json:"deal_verified,omitempty"`
	ExcludedMiners   []string `protobuf:"bytes,8,rep,name=excluded_miners,json=excludedMiners,proto3" json:"excluded_miners,omitempty"`
	FilEpochDeadline uint64   `protobuf:"varint,9,opt,name=fil_epoch_deadline,json=filEpochDeadline,proto3" json:"fil_epoch_deadline,omitempty"`
	Sources          *Sources `protobuf:"bytes,10,opt,name=sources,proto3" json:"sources,omitempty"`
}

func (x *ReadyToAuction) Reset() {
	*x = ReadyToAuction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToAuction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToAuction) ProtoMessage() {}

func (x *ReadyToAuction) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToAuction.ProtoReflect.Descriptor instead.
func (*ReadyToAuction) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{7}
}

func (x *ReadyToAuction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReadyToAuction) GetStorageDealId() string {
	if x != nil {
		return x.StorageDealId
	}
	return ""
}

func (x *ReadyToAuction) GetPayloadCid() []byte {
	if x != nil {
		return x.PayloadCid
	}
	return nil
}

func (x *ReadyToAuction) GetDealSize() uint64 {
	if x != nil {
		return x.DealSize
	}
	return 0
}

func (x *ReadyToAuction) GetDealDuration() uint64 {
	if x != nil {
		return x.DealDuration
	}
	return 0
}

func (x *ReadyToAuction) GetDealReplication() uint32 {
	if x != nil {
		return x.DealReplication
	}
	return 0
}

func (x *ReadyToAuction) GetDealVerified() bool {
	if x != nil {
		return x.DealVerified
	}
	return false
}

func (x *ReadyToAuction) GetExcludedMiners() []string {
	if x != nil {
		return x.ExcludedMiners
	}
	return nil
}

func (x *ReadyToAuction) GetFilEpochDeadline() uint64 {
	if x != nil {
		return x.FilEpochDeadline
	}
	return 0
}

func (x *ReadyToAuction) GetSources() *Sources {
	if x != nil {
		return x.Sources
	}
	return nil
}

type ReadyToCreateDeals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageDealId string                         `protobuf:"bytes,1,opt,name=storage_deal_id,json=storageDealId,proto3" json:"storage_deal_id,omitempty"`
	PayloadCid    []byte                         `protobuf:"bytes,2,opt,name=payload_cid,json=payloadCid,proto3" json:"payload_cid,omitempty"`
	PieceCid      []byte                         `protobuf:"bytes,3,opt,name=piece_cid,json=pieceCid,proto3" json:"piece_cid,omitempty"`
	PieceSize     uint64                         `protobuf:"varint,4,opt,name=piece_size,json=pieceSize,proto3" json:"piece_size,omitempty"`
	Duration      uint64                         `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Proposals     []*ReadyToCreateDeals_Proposal `protobuf:"bytes,6,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (x *ReadyToCreateDeals) Reset() {
	*x = ReadyToCreateDeals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToCreateDeals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToCreateDeals) ProtoMessage() {}

func (x *ReadyToCreateDeals) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToCreateDeals.ProtoReflect.Descriptor instead.
func (*ReadyToCreateDeals) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{8}
}

func (x *ReadyToCreateDeals) GetStorageDealId() string {
	if x != nil {
		return x.StorageDealId
	}
	return ""
}

func (x *ReadyToCreateDeals) GetPayloadCid() []byte {
	if x != nil {
		return x.PayloadCid
	}
	return nil
}

func (x *ReadyToCreateDeals) GetPieceCid() []byte {
	if x != nil {
		return x.PieceCid
	}
	return nil
}

func (x *ReadyToCreateDeals) GetPieceSize() uint64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

func (x *ReadyToCreateDeals) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ReadyToCreateDeals) GetProposals() []*ReadyToCreateDeals_Proposal {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type ReadyToBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCids []*ReadyToBatch_ReadyToBatchBR `protobuf:"bytes,1,rep,name=data_cids,json=dataCids,proto3" json:"data_cids,omitempty"`
}

func (x *ReadyToBatch) Reset() {
	*x = ReadyToBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToBatch) ProtoMessage() {}

func (x *ReadyToBatch) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToBatch.ProtoReflect.Descriptor instead.
func (*ReadyToBatch) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{9}
}

func (x *ReadyToBatch) GetDataCids() []*ReadyToBatch_ReadyToBatchBR {
	if x != nil {
		return x.DataCids
	}
	return nil
}

type NewBatchCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BatchCid         []byte   `protobuf:"bytes,2,opt,name=batch_cid,json=batchCid,proto3" json:"batch_cid,omitempty"`
	BrokerRequestIds []string `protobuf:"bytes,3,rep,name=broker_request_ids,json=brokerRequestIds,proto3" json:"broker_request_ids,omitempty"`
}

func (x *NewBatchCreated) Reset() {
	*x = NewBatchCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBatchCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBatchCreated) ProtoMessage() {}

func (x *NewBatchCreated) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBatchCreated.ProtoReflect.Descriptor instead.
func (*NewBatchCreated) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{10}
}

func (x *NewBatchCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewBatchCreated) GetBatchCid() []byte {
	if x != nil {
		return x.BatchCid
	}
	return nil
}

func (x *NewBatchCreated) GetBrokerRequestIds() []string {
	if x != nil {
		return x.BrokerRequestIds
	}
	return nil
}

type DealProposalAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageDealId string `protobuf:"bytes,1,opt,name=storage_deal_id,json=storageDealId,proto3" json:"storage_deal_id,omitempty"`
	MinerId       string `protobuf:"bytes,2,opt,name=miner_id,json=minerId,proto3" json:"miner_id,omitempty"`
	ProposalCid   []byte `protobuf:"bytes,3,opt,name=proposal_cid,json=proposalCid,proto3" json:"proposal_cid,omitempty"`
	AuctionId     string `protobuf:"bytes,4,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	BidId         string `protobuf:"bytes,5,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
}

func (x *DealProposalAccepted) Reset() {
	*x = DealProposalAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealProposalAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealProposalAccepted) ProtoMessage() {}

func (x *DealProposalAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealProposalAccepted.ProtoReflect.Descriptor instead.
func (*DealProposalAccepted) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{11}
}

func (x *DealProposalAccepted) GetStorageDealId() string {
	if x != nil {
		return x.StorageDealId
	}
	return ""
}

func (x *DealProposalAccepted) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *DealProposalAccepted) GetProposalCid() []byte {
	if x != nil {
		return x.ProposalCid
	}
	return nil
}

func (x *DealProposalAccepted) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *DealProposalAccepted) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

type AuctionClosed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StorageDealId   string                               `protobuf:"bytes,2,opt,name=storage_deal_id,json=storageDealId,proto3" json:"storage_deal_id,omitempty"`
	DealDuration    uint64                               `protobuf:"varint,3,opt,name=deal_duration,json=dealDuration,proto3" json:"deal_duration,omitempty"`
	DealReplication uint32                               `protobuf:"varint,4,opt,name=deal_replication,json=dealReplication,proto3" json:"deal_replication,omitempty"`
	DealVerified    bool                                 `protobuf:"varint,5,opt,name=deal_verified,json=dealVerified,proto3" json:"deal_verified,omitempty"`
	Status          AuctionClosed_Status                 `protobuf:"varint,6,opt,name=status,proto3,enum=broker.v1.AuctionClosed_Status" json:"status,omitempty"`
	WinningBids     map[string]*AuctionClosed_WinningBid `protobuf:"bytes,7,rep,name=winning_bids,json=winningBids,proto3" json:"winning_bids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error           string                               `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AuctionClosed) Reset() {
	*x = AuctionClosed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionClosed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionClosed) ProtoMessage() {}

func (x *AuctionClosed) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionClosed.ProtoReflect.Descriptor instead.
func (*AuctionClosed) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{12}
}

func (x *AuctionClosed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuctionClosed) GetStorageDealId() string {
	if x != nil {
		return x.StorageDealId
	}
	return ""
}

func (x *AuctionClosed) GetDealDuration() uint64 {
	if x != nil {
		return x.DealDuration
	}
	return 0
}

func (x *AuctionClosed) GetDealReplication() uint32 {
	if x != nil {
		return x.DealReplication
	}
	return 0
}

func (x *AuctionClosed) GetDealVerified() bool {
	if x != nil {
		return x.DealVerified
	}
	return false
}

func (x *AuctionClosed) GetStatus() AuctionClosed_Status {
	if x != nil {
		return x.Status
	}
	return AuctionClosed_STATUS_UNSPECIFIED
}

func (x *AuctionClosed) GetWinningBids() map[string]*AuctionClosed_WinningBid {
	if x != nil {
		return x.WinningBids
	}
	return nil
}

func (x *AuctionClosed) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NewBatchPrepared struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PieceCid  []byte `protobuf:"bytes,2,opt,name=piece_cid,json=pieceCid,proto3" json:"piece_cid,omitempty"`
	PieceSize uint64 `protobuf:"varint,3,opt,name=piece_size,json=pieceSize,proto3" json:"piece_size,omitempty"`
}

func (x *NewBatchPrepared) Reset() {
	*x = NewBatchPrepared{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBatchPrepared) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBatchPrepared) ProtoMessage() {}

func (x *NewBatchPrepared) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBatchPrepared.ProtoReflect.Descriptor instead.
func (*NewBatchPrepared) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{13}
}

func (x *NewBatchPrepared) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewBatchPrepared) GetPieceCid() []byte {
	if x != nil {
		return x.PieceCid
	}
	return nil
}

func (x *NewBatchPrepared) GetPieceSize() uint64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

type FinalizedDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageDealId  string `protobuf:"bytes,1,opt,name=storage_deal_id,json=storageDealId,proto3" json:"storage_deal_id,omitempty"`
	DealId         int64  `protobuf:"varint,2,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`
	DealExpiration uint64 `protobuf:"varint,3,opt,name=deal_expiration,json=dealExpiration,proto3" json:"deal_expiration,omitempty"`
	MinerId        string `protobuf:"bytes,4,opt,name=miner_id,json=minerId,proto3" json:"miner_id,omitempty"`
	ErrorCause     string `protobuf:"bytes,5,opt,name=error_cause,json=errorCause,proto3" json:"error_cause,omitempty"`
	AuctionId      string `protobuf:"bytes,6,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	BidId          string `protobuf:"bytes,7,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
}

func (x *FinalizedDeal) Reset() {
	*x = FinalizedDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizedDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizedDeal) ProtoMessage() {}

func (x *FinalizedDeal) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizedDeal.ProtoReflect.Descriptor instead.
func (*FinalizedDeal) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{14}
}

func (x *FinalizedDeal) GetStorageDealId() string {
	if x != nil {
		return x.StorageDealId
	}
	return ""
}

func (x *FinalizedDeal) GetDealId() int64 {
	if x != nil {
		return x.DealId
	}
	return 0
}

func (x *FinalizedDeal) GetDealExpiration() uint64 {
	if x != nil {
		return x.DealExpiration
	}
	return 0
}

func (x *FinalizedDeal) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *FinalizedDeal) GetErrorCause() string {
	if x != nil {
		return x.ErrorCause
	}
	return ""
}

func (x *FinalizedDeal) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *FinalizedDeal) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

type BrokerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DataCid       []byte                 `protobuf:"bytes,2,opt,name=data_cid,json=dataCid,proto3" json:"data_cid,omitempty"`
	Status        BrokerRequest_Status   `protobuf:"varint,3,opt,name=status,proto3,enum=broker.v1.BrokerRequest_Status" json:"status,omitempty"`
	StorageDealId string                 `protobuf:"bytes,4,opt,name=storage_deal_id,json=storageDealId,proto3" json:"storage_deal_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BrokerRequest) Reset() {
	*x = BrokerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerRequest) ProtoMessage() {}

func (x *BrokerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerRequest.ProtoReflect.Descriptor instead.
func (*BrokerRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{15}
}

func (x *BrokerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BrokerRequest) GetDataCid() []byte {
	if x != nil {
		return x.DataCid
	}
	return nil
}

func (x *BrokerRequest) GetStatus() BrokerRequest_Status {
	if x != nil {
		return x.Status
	}
	return BrokerRequest_UNSPECIFIED
}

func (x *BrokerRequest) GetStorageDealId() string {
	if x != nil {
		return x.StorageDealId
	}
	return ""
}

func (x *BrokerRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BrokerRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreatePreparedBrokerRequestRequest_PreparedCAR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PieceCid  string                                                  `protobuf:"bytes,1,opt,name=piece_cid,json=pieceCid,proto3" json:"piece_cid,omitempty"`
	PieceSize uint64                                                  `protobuf:"varint,2,opt,name=piece_size,json=pieceSize,proto3" json:"piece_size,omitempty"`
	RepFactor int64                                                   `protobuf:"varint,3,opt,name=rep_factor,json=repFactor,proto3" json:"rep_factor,omitempty"`
	Deadline  *timestamppb.Timestamp                                  `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	CarUrl    *CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL  `protobuf:"bytes,5,opt,name=car_url,json=carUrl,proto3" json:"car_url,omitempty"`
	CarIpfs   *CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS `protobuf:"bytes,6,opt,name=car_ipfs,json=carIpfs,proto3" json:"car_ipfs,omitempty"`
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) Reset() {
	*x = CreatePreparedBrokerRequestRequest_PreparedCAR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedBrokerRequestRequest_PreparedCAR) ProtoMessage() {}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedBrokerRequestRequest_PreparedCAR.ProtoReflect.Descriptor instead.
func (*CreatePreparedBrokerRequestRequest_PreparedCAR) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) GetPieceSize() uint64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) GetRepFactor() int64 {
	if x != nil {
		return x.RepFactor
	}
	return 0
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) GetCarUrl() *CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL {
	if x != nil {
		return x.CarUrl
	}
	return nil
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR) GetCarIpfs() *CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS {
	if x != nil {
		return x.CarIpfs
	}
	return nil
}

type CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL) Reset() {
	*x = CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL) ProtoMessage() {}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL.ProtoReflect.Descriptor instead.
func (*CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Multiaddrs []string `protobuf:"bytes,2,rep,name=multiaddrs,proto3" json:"multiaddrs,omitempty"`
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS) Reset() {
	*x = CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS) ProtoMessage() {}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS.ProtoReflect.Descriptor instead.
func (*CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{2, 0, 1}
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS) GetMultiaddrs() []string {
	if x != nil {
		return x.Multiaddrs
	}
	return nil
}

type GetBrokerRequestInfoResponse_BrokerRequestDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerId    string `protobuf:"bytes,1,opt,name=miner_id,json=minerId,proto3" json:"miner_id,omitempty"`
	DealId     int64  `protobuf:"varint,2,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`
	Expiration uint64 `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *GetBrokerRequestInfoResponse_BrokerRequestDeal) Reset() {
	*x = GetBrokerRequestInfoResponse_BrokerRequestDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrokerRequestInfoResponse_BrokerRequestDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrokerRequestInfoResponse_BrokerRequestDeal) ProtoMessage() {}

func (x *GetBrokerRequestInfoResponse_BrokerRequestDeal) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrokerRequestInfoResponse_BrokerRequestDeal.ProtoReflect.Descriptor instead.
func (*GetBrokerRequestInfoResponse_BrokerRequestDeal) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetBrokerRequestInfoResponse_BrokerRequestDeal) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *GetBrokerRequestInfoResponse_BrokerRequestDeal) GetDealId() int64 {
	if x != nil {
		return x.DealId
	}
	return 0
}

func (x *GetBrokerRequestInfoResponse_BrokerRequestDeal) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type Sources_CARURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *Sources_CARURL) Reset() {
	*x = Sources_CARURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sources_CARURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sources_CARURL) ProtoMessage() {}

func (x *Sources_CARURL) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sources_CARURL.ProtoReflect.Descriptor instead.
func (*Sources_CARURL) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Sources_CARURL) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type Sources_CARIPFS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Multiaddrs []string `protobuf:"bytes,2,rep,name=multiaddrs,proto3" json:"multiaddrs,omitempty"`
}

func (x *Sources_CARIPFS) Reset() {
	*x = Sources_CARIPFS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sources_CARIPFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sources_CARIPFS) ProtoMessage() {}

func (x *Sources_CARIPFS) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sources_CARIPFS.ProtoReflect.Descriptor instead.
func (*Sources_CARIPFS) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Sources_CARIPFS) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Sources_CARIPFS) GetMultiaddrs() []string {
	if x != nil {
		return x.Multiaddrs
	}
	return nil
}

type ReadyToCreateDeals_Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerId             string `protobuf:"bytes,1,opt,name=miner_id,json=minerId,proto3" json:"miner_id,omitempty"`
	PricePerGibPerEpoch int64  `protobuf:"varint,2,opt,name=price_per_gib_per_epoch,json=pricePerGibPerEpoch,proto3" json:"price_per_gib_per_epoch,omitempty"`
	StartEpoch          uint64 `protobuf:"varint,3,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	Verified            bool   `protobuf:"varint,4,opt,name=verified,proto3" json:"verified,omitempty"`
	FastRetrieval       bool   `protobuf:"varint,5,opt,name=fast_retrieval,json=fastRetrieval,proto3" json:"fast_retrieval,omitempty"`
	AuctionId           string `protobuf:"bytes,6,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	BidId               string `protobuf:"bytes,7,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
}

func (x *ReadyToCreateDeals_Proposal) Reset() {
	*x = ReadyToCreateDeals_Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToCreateDeals_Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToCreateDeals_Proposal) ProtoMessage() {}

func (x *ReadyToCreateDeals_Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToCreateDeals_Proposal.ProtoReflect.Descriptor instead.
func (*ReadyToCreateDeals_Proposal) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ReadyToCreateDeals_Proposal) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *ReadyToCreateDeals_Proposal) GetPricePerGibPerEpoch() int64 {
	if x != nil {
		return x.PricePerGibPerEpoch
	}
	return 0
}

func (x *ReadyToCreateDeals_Proposal) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *ReadyToCreateDeals_Proposal) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *ReadyToCreateDeals_Proposal) GetFastRetrieval() bool {
	if x != nil {
		return x.FastRetrieval
	}
	return false
}

func (x *ReadyToCreateDeals_Proposal) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *ReadyToCreateDeals_Proposal) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

type ReadyToBatch_ReadyToBatchBR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokerRequestId string `protobuf:"bytes,1,opt,name=broker_request_id,json=brokerRequestId,proto3" json:"broker_request_id,omitempty"`
	DataCid         []byte `protobuf:"bytes,2,opt,name=data_cid,json=dataCid,proto3" json:"data_cid,omitempty"`
}

func (x *ReadyToBatch_ReadyToBatchBR) Reset() {
	*x = ReadyToBatch_ReadyToBatchBR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToBatch_ReadyToBatchBR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToBatch_ReadyToBatchBR) ProtoMessage() {}

func (x *ReadyToBatch_ReadyToBatchBR) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToBatch_ReadyToBatchBR.ProtoReflect.Descriptor instead.
func (*ReadyToBatch_ReadyToBatchBR) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ReadyToBatch_ReadyToBatchBR) GetBrokerRequestId() string {
	if x != nil {
		return x.BrokerRequestId
	}
	return ""
}

func (x *ReadyToBatch_ReadyToBatchBR) GetDataCid() []byte {
	if x != nil {
		return x.DataCid
	}
	return nil
}

type AuctionClosed_WinningBid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerId       string `protobuf:"bytes,1,opt,name=miner_id,json=minerId,proto3" json:"miner_id,omitempty"`
	Price         int64  `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	StartEpoch    uint64 `protobuf:"varint,3,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	FastRetrieval bool   `protobuf:"varint,4,opt,name=fast_retrieval,json=fastRetrieval,proto3" json:"fast_retrieval,omitempty"`
}

func (x *AuctionClosed_WinningBid) Reset() {
	*x = AuctionClosed_WinningBid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_v1_broker_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionClosed_WinningBid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionClosed_WinningBid) ProtoMessage() {}

func (x *AuctionClosed_WinningBid) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_broker_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionClosed_WinningBid.ProtoReflect.Descriptor instead.
func (*AuctionClosed_WinningBid) Descriptor() ([]byte, []int) {
	return file_broker_v1_broker_proto_rawDescGZIP(), []int{12, 1}
}

func (x *AuctionClosed_WinningBid) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *AuctionClosed_WinningBid) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AuctionClosed_WinningBid) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *AuctionClosed_WinningBid) GetFastRetrieval() bool {
	if x != nil {
		return x.FastRetrieval
	}
	return false
}

var File_broker_v1_broker_proto protoreflect.FileDescriptor

var file_broker_v1_broker_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc8, 0x04, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x5b, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x41, 0x52, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x41, 0x52,
	0x52, 0x0b, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x41, 0x52, 0x1a, 0xb2, 0x03,
	0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x41, 0x52, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69,
	0x65, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x59, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x41, 0x52, 0x2e, 0x43, 0x41, 0x52,
	0x55, 0x52, 0x4c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x5c, 0x0a, 0x08, 0x63,
	0x61, 0x72, 0x5f, 0x69, 0x70, 0x66, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x41, 0x52, 0x2e, 0x43, 0x41, 0x52, 0x49, 0x50, 0x46, 0x53,
	0x52, 0x07, 0x63, 0x61, 0x72, 0x49, 0x70, 0x66, 0x73, 0x1a, 0x1a, 0x0a, 0x06, 0x43, 0x41, 0x52,
	0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x3b, 0x0a, 0x07, 0x43, 0x41, 0x52, 0x49, 0x50, 0x46, 0x53,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64,
	0x72, 0x73, 0x22, 0x59, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x99, 0x02, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f,
	0x0a, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x1a,
	0x67, 0x0a, 0x11, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x65, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x41, 0x52, 0x55, 0x52, 0x4c,
	0x52, 0x06, 0x63, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f,
	0x69, 0x70, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x41, 0x52, 0x49, 0x50, 0x46, 0x53, 0x52, 0x07, 0x63, 0x61, 0x72, 0x49, 0x70, 0x66, 0x73, 0x1a,
	0x1a, 0x0a, 0x06, 0x43, 0x41, 0x52, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x1a, 0x3b, 0x0a, 0x07, 0x43,
	0x41, 0x52, 0x49, 0x50, 0x46, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x61, 0x64, 0x64, 0x72, 0x73, 0x22, 0x80, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x54, 0x6f, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x66, 0x69, 0x6c,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2c, 0x0a,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xf3, 0x03, 0x0a, 0x12,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61,
	0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x69, 0x65, 0x63, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x65, 0x63,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x69,
	0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x61, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x1a, 0xf5, 0x01, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x17, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x67,
	0x69, 0x62, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x69, 0x62, 0x50,
	0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x64, 0x49,
	0x64, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x43, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x52, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x73, 0x1a, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x54, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x52, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64,
	0x22, 0x6c, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x43, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0xb2,
	0x01, 0x0a, 0x14, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69,
	0x64, 0x49, 0x64, 0x22, 0xa5, 0x05, 0x0a, 0x0d, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x77,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x2e, 0x57, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x77, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x63, 0x0a, 0x10, 0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x2e, 0x57,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x85, 0x01, 0x0a, 0x0a, 0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x42, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x22, 0x5d, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x22, 0x5e, 0x0a, 0x10, 0x4e,
	0x65, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x0d,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x65, 0x61, 0x6c, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x75, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x64, 0x49, 0x64, 0x22, 0x81, 0x03, 0x0a, 0x0d, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6e, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x54, 0x43,
	0x48, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x41, 0x4c, 0x4d, 0x41, 0x4b,
	0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x32, 0xdf, 0x02,
	0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65,
	0x78, 0x74, 0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2d, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x3b, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_broker_v1_broker_proto_rawDescOnce sync.Once
	file_broker_v1_broker_proto_rawDescData = file_broker_v1_broker_proto_rawDesc
)

func file_broker_v1_broker_proto_rawDescGZIP() []byte {
	file_broker_v1_broker_proto_rawDescOnce.Do(func() {
		file_broker_v1_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_broker_v1_broker_proto_rawDescData)
	})
	return file_broker_v1_broker_proto_rawDescData
}

var file_broker_v1_broker_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_broker_v1_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_broker_v1_broker_proto_goTypes = []interface{}{
	(AuctionClosed_Status)(0),                                      // 0: broker.v1.AuctionClosed.Status
	(BrokerRequest_Status)(0),                                      // 1: broker.v1.BrokerRequest.Status
	(*CreateBrokerRequestRequest)(nil),                             // 2: broker.v1.CreateBrokerRequestRequest
	(*CreateBrokerRequestResponse)(nil),                            // 3: broker.v1.CreateBrokerRequestResponse
	(*CreatePreparedBrokerRequestRequest)(nil),                     // 4: broker.v1.CreatePreparedBrokerRequestRequest
	(*CreatePreparedBrokerRequestResponse)(nil),                    // 5: broker.v1.CreatePreparedBrokerRequestResponse
	(*GetBrokerRequestInfoRequest)(nil),                            // 6: broker.v1.GetBrokerRequestInfoRequest
	(*GetBrokerRequestInfoResponse)(nil),                           // 7: broker.v1.GetBrokerRequestInfoResponse
	(*Sources)(nil),                                                // 8: broker.v1.Sources
	(*ReadyToAuction)(nil),                                         // 9: broker.v1.ReadyToAuction
	(*ReadyToCreateDeals)(nil),                                     // 10: broker.v1.ReadyToCreateDeals
	(*ReadyToBatch)(nil),                                           // 11: broker.v1.ReadyToBatch
	(*NewBatchCreated)(nil),                                        // 12: broker.v1.NewBatchCreated
	(*DealProposalAccepted)(nil),                                   // 13: broker.v1.DealProposalAccepted
	(*AuctionClosed)(nil),                                          // 14: broker.v1.AuctionClosed
	(*NewBatchPrepared)(nil),                                       // 15: broker.v1.NewBatchPrepared
	(*FinalizedDeal)(nil),                                          // 16: broker.v1.FinalizedDeal
	(*BrokerRequest)(nil),                                          // 17: broker.v1.BrokerRequest
	(*CreatePreparedBrokerRequestRequest_PreparedCAR)(nil),         // 18: broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR
	(*CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL)(nil),  // 19: broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR.CARURL
	(*CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS)(nil), // 20: broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR.CARIPFS
	(*GetBrokerRequestInfoResponse_BrokerRequestDeal)(nil),         // 21: broker.v1.GetBrokerRequestInfoResponse.BrokerRequestDeal
	(*Sources_CARURL)(nil),                                         // 22: broker.v1.Sources.CARURL
	(*Sources_CARIPFS)(nil),                                        // 23: broker.v1.Sources.CARIPFS
	(*ReadyToCreateDeals_Proposal)(nil),                            // 24: broker.v1.ReadyToCreateDeals.Proposal
	(*ReadyToBatch_ReadyToBatchBR)(nil),                            // 25: broker.v1.ReadyToBatch.ReadyToBatchBR
	nil,                                                            // 26: broker.v1.AuctionClosed.WinningBidsEntry
	(*AuctionClosed_WinningBid)(nil),                               // 27: broker.v1.AuctionClosed.WinningBid
	(*timestamppb.Timestamp)(nil),                                  // 28: google.protobuf.Timestamp
}
var file_broker_v1_broker_proto_depIdxs = []int32{
	17, // 0: broker.v1.CreateBrokerRequestResponse.request:type_name -> broker.v1.BrokerRequest
	18, // 1: broker.v1.CreatePreparedBrokerRequestRequest.preparedCAR:type_name -> broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR
	17, // 2: broker.v1.CreatePreparedBrokerRequestResponse.request:type_name -> broker.v1.BrokerRequest
	17, // 3: broker.v1.GetBrokerRequestInfoResponse.broker_request:type_name -> broker.v1.BrokerRequest
	21, // 4: broker.v1.GetBrokerRequestInfoResponse.deals:type_name -> broker.v1.GetBrokerRequestInfoResponse.BrokerRequestDeal
	22, // 5: broker.v1.Sources.car_url:type_name -> broker.v1.Sources.CARURL
	23, // 6: broker.v1.Sources.car_ipfs:type_name -> broker.v1.Sources.CARIPFS
	8,  // 7: broker.v1.ReadyToAuction.sources:type_name -> broker.v1.Sources
	24, // 8: broker.v1.ReadyToCreateDeals.proposals:type_name -> broker.v1.ReadyToCreateDeals.Proposal
	25, // 9: broker.v1.ReadyToBatch.data_cids:type_name -> broker.v1.ReadyToBatch.ReadyToBatchBR
	0,  // 10: broker.v1.AuctionClosed.status:type_name -> broker.v1.AuctionClosed.Status
	26, // 11: broker.v1.AuctionClosed.winning_bids:type_name -> broker.v1.AuctionClosed.WinningBidsEntry
	1,  // 12: broker.v1.BrokerRequest.status:type_name -> broker.v1.BrokerRequest.Status
	28, // 13: broker.v1.BrokerRequest.created_at:type_name -> google.protobuf.Timestamp
	28, // 14: broker.v1.BrokerRequest.updated_at:type_name -> google.protobuf.Timestamp
	28, // 15: broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR.deadline:type_name -> google.protobuf.Timestamp
	19, // 16: broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR.car_url:type_name -> broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR.CARURL
	20, // 17: broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR.car_ipfs:type_name -> broker.v1.CreatePreparedBrokerRequestRequest.PreparedCAR.CARIPFS
	27, // 18: broker.v1.AuctionClosed.WinningBidsEntry.value:type_name -> broker.v1.AuctionClosed.WinningBid
	2,  // 19: broker.v1.APIService.CreateBrokerRequest:input_type -> broker.v1.CreateBrokerRequestRequest
	4,  // 20: broker.v1.APIService.CreatePreparedBrokerRequest:input_type -> broker.v1.CreatePreparedBrokerRequestRequest
	6,  // 21: broker.v1.APIService.GetBrokerRequestInfo:input_type -> broker.v1.GetBrokerRequestInfoRequest
	3,  // 22: broker.v1.APIService.CreateBrokerRequest:output_type -> broker.v1.CreateBrokerRequestResponse
	5,  // 23: broker.v1.APIService.CreatePreparedBrokerRequest:output_type -> broker.v1.CreatePreparedBrokerRequestResponse
	7,  // 24: broker.v1.APIService.GetBrokerRequestInfo:output_type -> broker.v1.GetBrokerRequestInfoResponse
	22, // [22:25] is the sub-list for method output_type
	19, // [19:22] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_broker_v1_broker_proto_init() }
func file_broker_v1_broker_proto_init() {
	if File_broker_v1_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_broker_v1_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBrokerRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBrokerRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedBrokerRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedBrokerRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrokerRequestInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrokerRequestInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToAuction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToCreateDeals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBatchCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealProposalAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionClosed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBatchPrepared); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizedDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedBrokerRequestRequest_PreparedCAR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedBrokerRequestRequest_PreparedCAR_CARURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePreparedBrokerRequestRequest_PreparedCAR_CARIPFS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrokerRequestInfoResponse_BrokerRequestDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sources_CARURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sources_CARIPFS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToCreateDeals_Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToBatch_ReadyToBatchBR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_v1_broker_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionClosed_WinningBid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_broker_v1_broker_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_broker_v1_broker_proto_goTypes,
		DependencyIndexes: file_broker_v1_broker_proto_depIdxs,
		EnumInfos:         file_broker_v1_broker_proto_enumTypes,
		MessageInfos:      file_broker_v1_broker_proto_msgTypes,
	}.Build()
	File_broker_v1_broker_proto = out.File
	file_broker_v1_broker_proto_rawDesc = nil
	file_broker_v1_broker_proto_goTypes = nil
	file_broker_v1_broker_proto_depIdxs = nil
}
