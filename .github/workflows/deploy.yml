name: Deploy

on:
  push:
    branches:
      - sander/cd
  pull_request:
    branches:
      - main

env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_REGION: us-west1
  GKE_CLUSTER: main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push auctioneer
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./cmd/auctioneerd/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: textile/auctioneer:sha-${{ steps.prep.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push auth
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./cmd/authd/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: textile/auth:sha-${{ steps.prep.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push broker
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./cmd/brokerd/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: textile/broker:sha-${{ steps.prep.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push dealer
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./cmd/dealerd/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: textile/dealer:sha-${{ steps.prep.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push near
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./cmd/neard/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: textile/near:sha-${{ steps.prep.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push packer
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./cmd/packerd/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: textile/packer:sha-${{ steps.prep.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push storage
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./cmd/storaged/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: textile/storage:sha-${{ steps.prep.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Deploy
        run: |
          cd k8
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION --project $GKE_PROJECT
          K8_DEPLOYMENT=dev make -s build
