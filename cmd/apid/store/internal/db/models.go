// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"

	"github.com/libp2p/go-libp2p-core/peer"
	"github.com/textileio/bidbot/lib/auction"
	"github.com/textileio/broker-core/broker"
)

type AuctionStatus string

const (
	AuctionStatusUnspecified AuctionStatus = "unspecified"
	AuctionStatusQueued      AuctionStatus = "queued"
	AuctionStatusStarted     AuctionStatus = "started"
	AuctionStatusFinalized   AuctionStatus = "finalized"
)

func (e *AuctionStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AuctionStatus(s)
	case string:
		*e = AuctionStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for AuctionStatus: %T", src)
	}
	return nil
}

type Auction struct {
	ID                                 auction.ID     `json:"id"`
	BatchID                            broker.BatchID `json:"batchID"`
	PayloadCid                         string         `json:"payloadCid"`
	DealSize                           int64          `json:"dealSize"`
	DealDuration                       int64          `json:"dealDuration"`
	DealReplication                    int32          `json:"dealReplication"`
	DealVerified                       bool           `json:"dealVerified"`
	FilEpochDeadline                   int64          `json:"filEpochDeadline"`
	ExcludedMiners                     []string       `json:"excludedMiners"`
	Status                             AuctionStatus  `json:"status"`
	StartedAt                          time.Time      `json:"startedAt"`
	UpdatedAt                          time.Time      `json:"updatedAt"`
	Duration                           int64          `json:"duration"`
	Attempts                           int32          `json:"attempts"`
	ErrorCause                         sql.NullString `json:"errorCause"`
	BrokerAlreadyNotifiedClosedAuction bool           `json:"brokerAlreadyNotifiedClosedAuction"`
}

type Bid struct {
	ID               string        `json:"id"`
	AuctionID        string        `json:"auctionID"`
	MinerAddr        string        `json:"minerAddr"`
	WalletAddrSig    []byte        `json:"walletAddrSig"`
	BidderID         peer.ID       `json:"bidderID"`
	AskPrice         int64         `json:"askPrice"`
	VerifiedAskPrice sql.NullInt64 `json:"verifiedAskPrice"`
	StartEpoch       int64         `json:"startEpoch"`
	FastRetrieval    bool          `json:"fastRetrieval"`
	ReceivedAt       time.Time     `json:"receivedAt"`
}

type CarIpfsSource struct {
	AuctionID  string   `json:"auctionID"`
	Cid        string   `json:"cid"`
	Multiaddrs []string `json:"multiaddrs"`
}

type CarUrlSource struct {
	AuctionID string `json:"auctionID"`
	UrlString string `json:"urlString"`
}

type WinningBid struct {
	BidID                   string  `json:"bidID"`
	AuctionID               string  `json:"auctionID"`
	BidderID                peer.ID `json:"bidderID"`
	Acknowledged            bool    `json:"acknowledged"`
	ProposalCid             string  `json:"proposalCid"`
	ProposalCidAcknowledged bool    `json:"proposalCidAcknowledged"`
}
