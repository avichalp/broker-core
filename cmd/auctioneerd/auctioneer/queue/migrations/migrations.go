// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package migrations generated by go-bindata.// sources:
// migrations/001_init.down.sql
// migrations/001_init.up.sql
// migrations/002_bids_support_calculating_rates.down.sql
// migrations/002_bids_support_calculating_rates.up.sql
// migrations/003_auctions_add_client_address.down.sql
// migrations/003_auctions_add_client_address.up.sql
// migrations/004_bids_add_won_reason.down.sql
// migrations/004_bids_add_won_reason.up.sql
// migrations/005_auctions_add_providers.down.sql
// migrations/005_auctions_add_providers.up.sql
// migrations/006_consume_bidbot_events.down.sql
// migrations/006_consume_bidbot_events.up.sql
// migrations/007_bids_add_deal_failed_at.down.sql
// migrations/007_bids_add_deal_failed_at.up.sql
// migrations/008_leader_board.down.sql
// migrations/008_leader_board.up.sql
// migrations/009_leader_board_update.down.sql
// migrations/009_leader_board_update.up.sql
// migrations/010_leader_board_update2.down.sql
// migrations/010_leader_board_update2.up.sql
// migrations/011_leader_board_update3.down.sql
// migrations/011_leader_board_update3.up.sql
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __001_initDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xca\x4c\x29\xb6\xe6\x42\x12\x48\x2c\x4d\x2e\xc9\xcc\xcf\x2b\xb6\xe6\x02\x04\x00\x00\xff\xff\x2b\x30\x85\x77\x26\x00\x00\x00")

func _001_initDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__001_initDownSql,
		"001_init.down.sql",
	)
}

func _001_initDownSql() (*asset, error) {
	bytes, err := _001_initDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "001_init.down.sql", size: 38, mode: os.FileMode(420), modTime: time.Unix(1630006425, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __001_initUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x5d\x8f\xda\x30\x10\x7c\xcf\xaf\xd8\xb7\x03\xa9\xff\x80\xa7\xc0\x99\x53\xd4\x90\x9c\x82\x91\x38\x55\x95\xb5\x89\x17\xce\x3a\x0b\x47\xb6\x43\x8f\x56\xfd\xef\x55\x12\x8e\xaf\x10\x40\x7d\xdd\x99\x1d\xaf\x77\x67\x26\x19\x0b\x39\x03\x1e\x8e\x63\x06\xd1\x14\x92\x94\x03\x5b\x46\x73\x3e\x07\xac\x0a\xaf\xcc\xc6\xc1\x20\x00\x00\x50\x12\x3c\x7d\x7a\x78\xcd\xa2\x59\x98\xbd\xc1\x77\xf6\xf6\xad\x01\x72\xf4\xc5\xbb\xf8\x82\x6b\x81\x64\x11\xc7\x2d\x26\x09\xb5\x70\xea\x37\x41\xae\xd6\x6a\x73\x15\x96\x95\xc5\xfa\xa1\x1b\x14\x4b\xa5\x56\x45\xcb\xea\xa1\x6c\xc9\xaa\x95\x22\x09\xb9\x31\x9a\x70\x73\xc1\x59\x29\x2d\xa8\x34\xc5\xbb\x90\x84\x52\xab\x4d\xcf\x44\xf4\x59\xe8\x4a\x92\x14\xce\x1b\x8b\x6b\x12\xa5\x35\x5b\x25\xc9\xba\xe6\x7b\x3f\x7e\x1e\xf8\xf0\xcc\xa6\xe1\x22\xe6\xf0\xf4\xe7\xef\x53\xdb\x5c\xe2\x4e\x1b\x94\xa2\xb8\xbe\x8c\x02\xad\xa8\xac\x3e\x87\x8e\x32\x4f\x47\x96\x2a\x57\xae\xab\xd2\x4f\x45\x29\x1f\x1a\xd0\x79\xf4\x95\xbb\x36\x1b\x59\x6b\xac\x28\xb0\x72\x74\xe7\xd1\xdb\xe7\x72\x1e\xad\x27\x29\xd0\x03\x8f\x66\x6c\xce\xc3\xd9\x6b\x57\x6b\xb2\xc8\x32\x96\x70\x71\xa0\xb4\xcd\x55\x29\xf1\x3f\x9a\x9b\xde\xe1\x28\xd8\x7b\x39\x4a\x9e\xd9\xb2\xc7\xcb\xe2\x8a\x0f\xd2\xe4\x00\x0f\xba\xf0\x83\xba\xfb\xcd\x9e\x6a\xb5\xa5\xe1\x28\x08\x82\x1b\x29\xcb\x95\xbc\x9b\xb0\xbd\x64\x9d\x31\xce\x96\xfc\x62\xe5\xbf\x50\x6b\xf2\x8d\x07\x84\x53\x6b\xc8\x77\x9e\xb0\x73\x96\x73\x37\xf7\x48\xe5\x4a\xf6\x83\xe8\x3e\x44\x69\x55\x41\x30\x8e\x5e\xa2\xe4\x12\xfe\x0a\xa0\xb8\xc3\x6b\x1c\xd2\x2e\xf9\x3a\x61\x85\xce\x0b\x4b\xde\x2a\xda\xa2\x86\x71\x9a\xc6\x2c\x4c\xba\x3e\x98\x86\xf1\x9c\xb5\x2d\x96\x0a\x52\xdb\x3e\xe7\xec\xd7\x64\x36\x67\xf0\x3e\xb2\xd6\x94\xc6\xa1\x3e\xa4\xad\x5b\x16\x92\xb4\xda\x92\xbd\x90\xef\x27\xee\x44\x93\xa6\x13\xb9\x49\x9a\xcc\x79\x16\xd6\x7f\x5d\x7d\x88\x93\x73\x4e\xd3\x8c\x45\x2f\x49\x7d\xea\xc1\xb1\x3c\x84\x8c\x4d\x59\xc6\x92\x09\x3b\x5a\x6c\xa0\xe4\xf0\x01\xa7\xd7\x7e\x3a\x7d\x21\x4d\x9a\xd2\xa9\xfa\x28\xf8\x17\x00\x00\xff\xff\xa7\x9e\x55\x6c\xf6\x05\x00\x00")

func _001_initUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__001_initUpSql,
		"001_init.up.sql",
	)
}

func _001_initUpSql() (*asset, error) {
	bytes, err := _001_initUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "001_init.up.sql", size: 1526, mode: os.FileMode(420), modTime: time.Unix(1630006425, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __002_bids_support_calculating_ratesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xca\x4c\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x49\x4d\xcc\x89\x4f\xce\xcf\x4b\xcb\x2c\xca\x4d\x4d\x89\x4f\x2c\xb1\xe6\x02\x4b\x7b\xfa\xb9\xb8\x46\x28\x78\xba\x29\xb8\x46\x78\x06\x87\x04\x83\x35\xc6\x17\xa5\x26\xa7\x66\x96\x41\x95\x01\x02\x00\x00\xff\xff\xc6\x11\xea\x17\x57\x00\x00\x00")

func _002_bids_support_calculating_ratesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__002_bids_support_calculating_ratesDownSql,
		"002_bids_support_calculating_rates.down.sql",
	)
}

func _002_bids_support_calculating_ratesDownSql() (*asset, error) {
	bytes, err := _002_bids_support_calculating_ratesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "002_bids_support_calculating_rates.down.sql", size: 87, mode: os.FileMode(420), modTime: time.Unix(1632754344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __002_bids_support_calculating_ratesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xca\x4c\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x49\x4d\xcc\x89\x4f\xce\xcf\x4b\xcb\x2c\xca\x4d\x4d\x89\x4f\x2c\x51\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\xb0\xe6\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x06\x9b\x13\x5f\x94\x9a\x9c\x9a\x59\x06\xd1\xe6\xef\x07\x16\xd3\x40\x12\xd3\xb4\xe6\x02\x04\x00\x00\xff\xff\x12\x02\x30\xf1\x7b\x00\x00\x00")

func _002_bids_support_calculating_ratesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__002_bids_support_calculating_ratesUpSql,
		"002_bids_support_calculating_rates.up.sql",
	)
}

func _002_bids_support_calculating_ratesUpSql() (*asset, error) {
	bytes, err := _002_bids_support_calculating_ratesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "002_bids_support_calculating_rates.up.sql", size: 123, mode: os.FileMode(420), modTime: time.Unix(1632421151, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __003_auctions_add_client_addressDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x4d\x2e\xc9\xcc\xcf\x2b\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xce\xc9\x4c\xcd\x2b\x89\x4f\x4c\x49\x29\x4a\x2d\x2e\xb6\xe6\x02\x04\x00\x00\xff\xff\x9e\xb9\x90\xbb\x31\x00\x00\x00")

func _003_auctions_add_client_addressDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__003_auctions_add_client_addressDownSql,
		"003_auctions_add_client_address.down.sql",
	)
}

func _003_auctions_add_client_addressDownSql() (*asset, error) {
	bytes, err := _003_auctions_add_client_addressDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "003_auctions_add_client_address.down.sql", size: 49, mode: os.FileMode(420), modTime: time.Unix(1632754344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __003_auctions_add_client_addressUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\xb3\xe6\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x4d\x2e\xc9\xcc\xcf\x2b\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xce\xc9\x4c\xcd\x2b\x89\x4f\x4c\x49\x29\x4a\x2d\x2e\x56\x08\x71\x8d\x08\xb1\xe6\x0a\x0d\x70\x71\x0c\x41\x52\x1f\xec\x1a\x82\xae\xd0\x56\x41\x3d\xcd\xd0\xc4\xa4\x2a\xb5\xc0\x24\x3d\xb3\x24\xcb\xdc\xb8\xa8\xa8\x34\x2b\xc5\x38\xab\xdc\x2c\xb3\xa0\x28\x27\x2b\x33\xb9\xc2\xac\x2c\xc7\xa4\x3c\x29\x35\xb1\x2c\x53\x1d\x97\x33\xc0\x82\xd8\x1d\x02\xb2\xd2\xcf\x3f\x44\xc1\x2f\xd4\xc7\xc7\x9a\xcb\xd9\xdf\xd7\xd7\x33\xc4\x9a\x0b\x10\x00\x00\xff\xff\xa4\x28\x63\x82\xd5\x00\x00\x00")

func _003_auctions_add_client_addressUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__003_auctions_add_client_addressUpSql,
		"003_auctions_add_client_address.up.sql",
	)
}

func _003_auctions_add_client_addressUpSql() (*asset, error) {
	bytes, err := _003_auctions_add_client_addressUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "003_auctions_add_client_address.up.sql", size: 213, mode: os.FileMode(420), modTime: time.Unix(1632754344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __004_bids_add_won_reasonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xca\x4c\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x28\xcf\xcf\x8b\x2f\x4a\x4d\x2c\xce\xcf\xb3\xe6\xe2\x02\x04\x00\x00\xff\xff\xe1\xf7\x62\x2a\x2a\x00\x00\x00")

func _004_bids_add_won_reasonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__004_bids_add_won_reasonDownSql,
		"004_bids_add_won_reason.down.sql",
	)
}

func _004_bids_add_won_reasonDownSql() (*asset, error) {
	bytes, err := _004_bids_add_won_reasonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "004_bids_add_won_reason.down.sql", size: 42, mode: os.FileMode(420), modTime: time.Unix(1633543228, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __004_bids_add_won_reasonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xca\x4c\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x28\xcf\xcf\x8b\x2f\x4a\x4d\x2c\xce\xcf\x53\x08\x71\x8d\x08\xb1\xe6\x02\x04\x00\x00\xff\xff\x99\x5a\x93\xde\x2d\x00\x00\x00")

func _004_bids_add_won_reasonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__004_bids_add_won_reasonUpSql,
		"004_bids_add_won_reason.up.sql",
	)
}

func _004_bids_add_won_reasonUpSql() (*asset, error) {
	bytes, err := _004_bids_add_won_reasonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "004_bids_add_won_reason.up.sql", size: 45, mode: os.FileMode(420), modTime: time.Unix(1633543228, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __005_auctions_add_providersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x4d\x2e\xc9\xcc\xcf\x2b\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x28\x28\xca\x2f\xcb\x4c\x49\x2d\x2a\xb6\xe6\x02\x04\x00\x00\xff\xff\x35\xb4\x2f\x33\x2c\x00\x00\x00")

func _005_auctions_add_providersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__005_auctions_add_providersDownSql,
		"005_auctions_add_providers.down.sql",
	)
}

func _005_auctions_add_providersDownSql() (*asset, error) {
	bytes, err := _005_auctions_add_providersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "005_auctions_add_providers.down.sql", size: 44, mode: os.FileMode(420), modTime: time.Unix(1633543228, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __005_auctions_add_providersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x4d\x2e\xc9\xcc\xcf\x2b\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x28\x28\xca\x2f\xcb\x4c\x49\x2d\x2a\x56\x08\x71\x8d\x08\x89\x8e\xb5\xe6\x02\x04\x00\x00\xff\xff\xb7\x08\x84\xce\x32\x00\x00\x00")

func _005_auctions_add_providersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__005_auctions_add_providersUpSql,
		"005_auctions_add_providers.up.sql",
	)
}

func _005_auctions_add_providersUpSql() (*asset, error) {
	bytes, err := _005_auctions_add_providersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "005_auctions_add_providers.up.sql", size: 50, mode: os.FileMode(420), modTime: time.Unix(1633543228, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __006_consume_bidbot_eventsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\xca\x4c\x89\x4f\x2d\x4b\xcd\x2b\x29\xb6\xe6\x02\x2b\x70\xf5\x0b\xf5\x45\x88\xc6\x97\x54\x16\xa4\x42\x65\xd0\xb5\x16\x97\xe4\x17\x25\xa6\xa7\xc6\x17\x14\xe5\x97\x65\xa6\xa4\x16\x15\x5b\x73\x01\x02\x00\x00\xff\xff\x4a\x5a\x98\x47\x63\x00\x00\x00")

func _006_consume_bidbot_eventsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__006_consume_bidbot_eventsDownSql,
		"006_consume_bidbot_events.down.sql",
	)
}

func _006_consume_bidbot_eventsDownSql() (*asset, error) {
	bytes, err := _006_consume_bidbot_eventsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "006_consume_bidbot_events.down.sql", size: 99, mode: os.FileMode(420), modTime: time.Unix(1633707990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __006_consume_bidbot_eventsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6e\xe2\x30\x10\x86\xef\x79\x8a\xb9\x01\x52\xdf\xa0\xa7\x2c\x35\xab\x68\xc1\xa0\xc4\x48\xe5\x64\x99\x78\x12\x46\x1b\xec\xc8\x9e\xa6\xcb\x3e\xfd\x8a\x84\xa0\xa6\x6a\xb9\xec\xd1\xbf\xbf\xf9\x35\xf3\xcf\x2c\x73\x91\x2a\x01\x2a\xfd\xb1\x16\x90\xad\x40\x6e\x15\x88\xd7\xac\x50\x05\x44\xf6\xc1\xd4\xa8\xdb\xe0\x3b\xb2\x18\x22\xcc\x13\x00\x00\xb2\xc0\xf8\x87\x61\x97\x67\x9b\x34\x3f\xc0\x2f\x71\x78\xea\x3f\x8e\x64\x8f\x9e\x75\x87\x21\x92\x77\x03\x74\xf5\x93\xfb\xf5\x7a\x20\x2c\x9a\x46\x47\x36\x81\xf5\x3b\x39\xeb\xdf\xe1\x48\x35\xb9\xcf\x58\x49\x56\xd7\xc1\x74\xc4\x17\x5d\x7a\x57\x51\xfd\x16\xd0\xc2\xd1\xfb\x06\x8d\x7b\x00\x47\x0e\x54\xf2\x37\x60\x45\x21\xb2\x8e\x88\x4e\x1b\x06\xa6\x33\x46\x36\xe7\xf6\x4e\xc1\x8b\x58\xa5\xfb\xb5\x82\xe5\x3e\xcf\x85\x54\x5a\x65\x1b\x51\xa8\x74\xb3\x1b\xea\x1b\xf3\xff\xe5\x6f\xee\x84\xa6\xe1\xd3\x65\xe2\xf1\x25\x80\x21\xf8\xd0\x87\xd8\xff\x2e\x9e\x93\x64\x5c\xd6\x61\x27\xae\x61\x6b\xec\xd0\xb1\xe6\x4b\x8b\x90\x16\x20\xe4\x7e\x03\xf3\xd9\x10\x6f\x85\x5c\x9e\xc8\xd5\xb3\x27\x98\xf5\x4e\x13\x65\x60\xe8\xdc\xfa\xc0\x23\xe4\xec\x54\xa8\xc8\x99\x86\xfe\xa2\xbd\x5b\xa0\x9d\x2d\x9e\x93\x07\x17\x73\xef\x69\x3c\x95\xab\x30\x9e\xcb\x74\x19\x1f\x5a\xff\x34\xc9\x94\x33\xcc\x78\x6e\x39\x02\x39\xbe\x55\xde\x73\x19\xde\x27\xd3\xb6\xe8\xd0\x7e\xbd\x95\x81\x09\x58\x22\x75\x8f\x99\xe5\x56\x16\x2a\x4f\x33\xa9\xa0\xfa\xad\x6f\x9d\xaf\xb6\xb9\xc8\x7e\xca\xeb\x8d\xcf\x07\x69\x01\xb9\x58\x89\x5c\xc8\xa5\xe8\x07\x8e\x73\xb2\x8b\x71\x43\xb7\x6c\x32\xf9\x22\x5e\xbf\xcd\x66\xf4\xde\xca\x0f\xe2\xe8\xfe\x9c\xfc\x0b\x00\x00\xff\xff\x36\xc9\x9e\xc0\x92\x03\x00\x00")

func _006_consume_bidbot_eventsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__006_consume_bidbot_eventsUpSql,
		"006_consume_bidbot_events.up.sql",
	)
}

func _006_consume_bidbot_eventsUpSql() (*asset, error) {
	bytes, err := _006_consume_bidbot_eventsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "006_consume_bidbot_events.up.sql", size: 914, mode: os.FileMode(420), modTime: time.Unix(1633707990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __007_bids_add_deal_failed_atDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xca\x4c\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x49\x4d\xcc\x89\x4f\x4b\xcc\xcc\x49\x4d\x89\x4f\x2c\xb1\xe6\xe2\x02\x04\x00\x00\xff\xff\x61\x34\xf9\x26\x2e\x00\x00\x00")

func _007_bids_add_deal_failed_atDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__007_bids_add_deal_failed_atDownSql,
		"007_bids_add_deal_failed_at.down.sql",
	)
}

func _007_bids_add_deal_failed_atDownSql() (*asset, error) {
	bytes, err := _007_bids_add_deal_failed_atDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "007_bids_add_deal_failed_at.down.sql", size: 46, mode: os.FileMode(420), modTime: time.Unix(1633707990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __007_bids_add_deal_failed_atUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xca\x4c\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x49\x4d\xcc\x89\x4f\x4b\xcc\xcc\x49\x4d\x89\x4f\x2c\x51\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\xb0\xe6\xe2\x02\x04\x00\x00\xff\xff\x43\xc8\x19\x2c\x37\x00\x00\x00")

func _007_bids_add_deal_failed_atUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__007_bids_add_deal_failed_atUpSql,
		"007_bids_add_deal_failed_at.up.sql",
	)
}

func _007_bids_add_deal_failed_atUpSql() (*asset, error) {
	bytes, err := _007_bids_add_deal_failed_atUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "007_bids_add_deal_failed_at.up.sql", size: 55, mode: os.FileMode(420), modTime: time.Unix(1633707990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __008_leader_boardDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x29\xca\x2f\x50\x28\xcb\x4c\x2d\x57\x48\xce\xcf\x2d\x48\x2d\xc9\x2c\xc9\xcc\xcf\x8b\x2f\x4a\x2d\x2e\xcd\x29\x29\xb6\x06\x04\x00\x00\xff\xff\x12\x94\xb7\x04\x1e\x00\x00\x00")

func _008_leader_boardDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__008_leader_boardDownSql,
		"008_leader_board.down.sql",
	)
}

func _008_leader_boardDownSql() (*asset, error) {
	bytes, err := _008_leader_boardDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "008_leader_board.down.sql", size: 30, mode: os.FileMode(420), modTime: time.Unix(1635955390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __008_leader_boardUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x5d\x6f\xd3\x40\x10\x7c\xcf\xaf\x98\xb7\xd8\x51\x9a\xc4\x55\x25\x44\xa1\x95\x90\xe0\x01\xa9\x4a\x25\x0a\xcf\xd6\xf9\x6e\x9d\x1c\x9c\xef\xcc\xde\x39\x26\xfc\x7a\x74\xfe\x22\x2d\x06\x2c\xd9\xf2\x7a\x76\x67\xe7\x76\xc7\x92\x49\x04\x82\x63\x30\xd5\x46\x48\xc2\x49\x53\x0b\xe9\xaa\x9a\x82\x0e\xda\xd9\x9c\xc9\x37\x26\x78\x08\x8f\x64\x01\xb4\x3a\x1c\x51\x8c\x11\xe0\xc9\x90\x0c\xdd\x2b\xe0\x83\x63\x71\xa0\xbc\x66\x77\xd2\x8a\x38\xd7\x6a\x3d\x40\x19\xae\x40\x3f\x02\x0b\x19\x12\xaa\x9d\x3c\xa2\x64\x57\x41\x36\xcc\x64\x43\x1e\x74\x45\x3e\x88\xaa\xc6\x15\x98\x24\xe9\x13\xa9\x5c\x84\x14\xdb\xb9\x2a\x6d\x03\xf1\x49\x18\x2c\xaf\xd1\x12\x7d\xf3\xcb\x14\xef\x9e\x50\x32\xf9\xa3\x25\xef\xc7\xa6\xf1\x92\xc2\x13\xda\x23\x59\x28\x12\x26\x97\xce\x96\x9a\xab\x8e\x1d\xda\xc3\x36\xc6\x20\x44\x38\x03\x19\x4f\xd8\xe1\xc3\xfe\x3d\x4a\xa1\x0d\x4d\xe2\xff\xc5\xf1\xf1\xe9\x82\x63\xd7\x73\x74\x59\x5e\xff\xa4\x6d\x92\x6d\x76\xaf\x6e\x56\xb5\x6b\x93\x6c\xb7\x7e\x9d\xa6\x20\xab\x7e\xe3\x03\x7f\x77\xa8\x42\x2b\x3f\xc4\x5f\x9d\xb6\x10\x8d\x8c\x0b\xf0\x70\xb6\xc3\x36\xc3\x87\x5c\x2b\xdc\x4d\xe8\x46\xab\xa1\xa8\x3d\x12\xd3\xe5\xf0\x70\x3f\x3b\xde\x3f\x87\x07\x61\x15\x5a\x67\x87\xe3\xec\x1f\x3f\x63\xff\xe5\xe1\x61\x1a\x62\x84\x93\x4e\x73\x3f\x96\x17\x79\x78\xfc\xf4\xac\xed\xdb\xff\xb4\xcd\xa0\xc4\xd9\x2f\xd3\x05\x10\xef\x0b\x07\x15\x9b\xbf\x3a\xc8\x37\x55\x52\x6c\xfa\xfe\x69\xb4\xdf\x20\x25\xca\x1a\xf6\x2d\x5d\x63\x43\xb2\xea\xd0\x71\x3c\x79\xeb\xec\x0c\xc1\xed\x6d\x69\x9c\x08\xdb\xb1\x64\x88\x47\xde\x86\x29\x67\x11\xe8\x59\xe5\x68\xae\xd5\xc4\xb2\xbd\xec\xa8\x48\x8a\xb3\xb6\x87\x7c\x9e\x60\x5a\x79\x97\x7c\xd0\xc5\x28\x7a\xb2\xd6\x8b\xac\xfb\x3b\x64\xbb\xeb\x9b\xde\x57\x81\x1b\xea\xad\x55\x8a\xf8\x8c\x26\xfa\xde\x08\xa3\x4b\x4d\x71\xff\xbd\x81\x16\xc0\x81\x5d\x53\xa3\x38\xcf\xfd\x8a\x0b\xc0\xb1\x22\x8e\xf0\x54\x0c\x45\x5e\xae\xe7\xd5\x43\x44\x28\x6a\xed\xb2\x16\xe9\x9b\x5f\x01\x00\x00\xff\xff\xb8\xe0\x42\x98\x30\x04\x00\x00")

func _008_leader_boardUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__008_leader_boardUpSql,
		"008_leader_board.up.sql",
	)
}

func _008_leader_boardUpSql() (*asset, error) {
	bytes, err := _008_leader_boardUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "008_leader_board.up.sql", size: 1072, mode: os.FileMode(420), modTime: time.Unix(1635955390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __009_leader_board_updateDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xed\x6e\x9c\x30\x10\xfc\x7f\x4f\x31\xff\x02\x51\x72\x77\x44\x91\xaa\xa6\x4d\x5e\x05\x19\x7b\xb9\xdb\xd6\xd8\x74\x6d\x8e\x5e\x9f\xbe\xb2\xf9\xe8\x35\xa5\x6a\x91\x40\x98\xd9\x9d\x9d\xdd\x1d\xb4\x90\x8a\x04\x2f\x10\xea\xad\xd2\x84\x0b\xd3\x08\xed\xbb\x9e\x22\x47\xf6\xae\x16\x0a\x83\x8d\x01\x2a\xa0\xd8\x01\x23\xc7\x33\x9a\xe5\x04\x04\xb2\xa4\x63\x7e\x05\x42\xf4\xa2\x4e\x54\xf7\xe2\x2f\x6c\x48\x6a\x36\x0f\x33\x54\xe1\x11\xf4\x3d\x8a\xd2\xb1\xa0\xde\xeb\x33\x5a\xf1\x1d\xf4\x20\x42\x2e\xd6\x91\x3b\x0a\x51\x75\x3d\x1e\x21\xa4\x89\x2f\x64\x6a\x15\x4b\x1c\xb6\xb2\xd8\x45\x92\x8b\xb2\xb8\x7b\xc2\x48\xf4\x35\xdc\x95\x49\x51\x2b\x14\xce\x8e\x42\x58\x8a\xa6\x4b\xab\x40\x18\xcf\xe4\x60\x48\xd9\x5a\x7b\xd7\xb2\x74\x99\x1d\x1c\xe0\x06\x6b\x11\x13\x5c\x81\x6c\x20\x1c\x41\xce\xa0\x55\x6c\x69\x15\xff\xdf\x1c\xc7\x89\x23\x47\x05\xfe\x41\x87\xa2\xda\x1f\x3f\x3c\xdf\xf7\x7e\x2c\xaa\xe3\xc3\xc7\xb2\xcc\xec\x2b\x3e\xf3\xe7\xa6\x1a\x36\x61\x3e\x7f\xf1\xec\xa0\x06\x9d\x16\x10\xe0\x5d\xc6\xf6\xf3\x87\x9a\x0d\x5e\x57\x74\xcf\x66\x4e\x1a\xcf\x24\x74\x3b\x3c\xbc\x6d\x8e\xf7\xcf\xe1\x41\x39\x83\xd1\xbb\xa5\x1d\x1f\x73\x4b\xeb\x10\x13\x5c\x64\xcd\xd3\x58\xde\xc5\x4d\xf6\xf9\x55\xf6\xf3\x3f\xca\x56\x30\xea\x1a\xee\xca\x1d\x90\xee\x1b\x07\x35\xfb\xbf\x3a\x28\x0c\x5d\xd1\xec\xa7\xfa\xd3\xb2\x27\x29\x49\xd6\xbc\x6f\xed\x07\x17\x8b\xfb\x8c\x2e\xe3\xa9\x47\xef\x36\x08\x5e\x5e\x5a\xeb\x55\x3c\x2c\x29\xf3\x79\xe1\x1d\x84\x6a\x51\x91\x7e\xcb\x5c\xcc\x75\xbf\xb2\x1c\x6e\x2b\x1a\xd2\xea\xca\xee\x54\x6f\x13\xac\x2b\xcf\xc1\x27\x6e\x16\xd1\xab\xb5\xde\x45\xbd\xbd\xa2\x3a\x3e\x3d\x4f\xbe\x8a\x32\xd0\x64\xad\x56\xa5\x67\x32\xd1\xb7\x41\x59\x6e\x99\xd2\xfe\x27\x03\xed\x80\x93\xf8\xa1\x47\x73\xdd\xfa\x15\x77\x80\x17\x43\x92\xe0\x35\x19\x86\x82\x7e\xd8\x56\x0f\x95\xa0\xa4\x35\x47\xed\xca\x4f\x3f\x03\x00\x00\xff\xff\xca\x8f\x6c\x7b\x30\x04\x00\x00")

func _009_leader_board_updateDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__009_leader_board_updateDownSql,
		"009_leader_board_update.down.sql",
	)
}

func _009_leader_board_updateDownSql() (*asset, error) {
	bytes, err := _009_leader_board_updateDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "009_leader_board_update.down.sql", size: 1072, mode: os.FileMode(420), modTime: time.Unix(1635959828, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __009_leader_board_updateUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xed\x8e\x9b\x40\x0c\xfc\x9f\xa7\x98\x7f\x81\xe8\x2e\x09\xa7\x93\xaa\x5e\x7b\xf7\x2a\x68\xd9\x35\x89\xdb\x65\x97\x7a\x4d\x68\xfa\xf4\x15\x9f\x4d\xaf\xa9\x5a\x24\x10\xcb\xd8\x63\x7b\x3c\x58\x21\xa3\x84\x28\x10\x6a\xbd\xb1\x84\x0b\x53\x0f\x1b\x9b\x96\x94\x95\x63\x28\x85\x52\xe7\x35\xc1\x24\x64\x1b\xa0\x67\x3d\xa3\x5a\x4e\x40\x22\x4f\x56\xc7\x57\x20\x69\x14\x73\xa2\xb2\x95\x78\x61\x47\x52\xb2\x7b\x98\xa1\x02\x8f\xa0\xef\x2a\xc6\x6a\x46\x6d\xb4\x67\xd4\x12\x1b\xd8\x4e\x84\x82\x96\xca\x0d\x25\x35\x4d\x8b\x47\x08\x59\xe2\x0b\xb9\xd2\x68\x8e\xc3\xbd\x2c\x0e\x4a\x72\x31\x1e\xdb\x27\xf4\x44\x5f\xd3\x36\x1f\x3a\xaa\x85\xd2\x39\x50\x4a\x4b\xd1\xe1\xb2\x26\x11\xfa\x33\x05\x38\x32\xbe\xb4\x31\xd4\x2c\xcd\xc8\x0e\x4e\x08\x9d\xf7\xd0\x01\x2e\x40\x3e\x11\x8e\xa0\xe0\x50\x1b\xf6\xb4\x36\xff\xdf\x1c\xc7\x89\x63\x8c\x4a\xfc\x83\x0e\x59\xb1\x3f\x7e\x78\xde\xb5\xb1\xcf\x8a\xe3\xc3\xc7\x3c\x1f\xd9\x57\x7c\xe6\x1f\x87\xaa\xd8\xa5\xf9\xfc\x25\x72\x80\xe9\xec\xb0\x80\x84\x18\x46\x6c\x3f\x7f\x28\xd9\xe1\x75\x45\xf7\xec\xe6\xa4\xfe\x4c\x42\xb7\xe2\xe1\xed\xae\xbc\x7f\x8a\x07\x13\x1c\xfa\x18\x96\x71\xa2\x8e\x23\xad\x22\x0e\x70\x36\xf6\x3c\xc9\xf2\x2e\x6e\xb2\xcf\xaf\xb2\x9f\xff\x51\xb6\x80\x33\xd7\xb4\xcd\x37\xc0\x70\xdf\x38\xa8\xda\xff\xd5\x41\xa9\x6b\xb2\x6a\x3f\xd5\x9f\x96\x3d\xb5\x32\xb4\x35\xef\xdb\xc6\x2e\x68\xb6\x1b\xd1\x45\x9e\xb2\x8f\xe1\x0e\xc1\xcb\x4b\xed\xa3\xd1\xc3\x92\x32\x9f\x17\xde\x4e\xa8\x14\xa3\xf4\x5b\xe6\x62\xae\xdd\xca\x72\xb8\xad\xe8\xc8\x9a\x2b\x87\x53\x79\x9f\x60\x5d\xf9\x18\x7c\xe2\x6a\x69\x7a\xb5\xd6\xbb\xa8\xb7\x57\x14\xc7\xa7\xe7\xc9\x57\x2a\x1d\x4d\xd6\xaa\xcd\xf0\x1c\x4c\xf4\xad\x33\x9e\x6b\xa6\x61\xff\x93\x81\x36\xc0\x49\x62\xd7\xa2\xba\xde\xfb\x15\x37\xf9\xa7\x9f\x01\x00\x00\xff\xff\x5c\x31\x52\xfd\xf0\x03\x00\x00")

func _009_leader_board_updateUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__009_leader_board_updateUpSql,
		"009_leader_board_update.up.sql",
	)
}

func _009_leader_board_updateUpSql() (*asset, error) {
	bytes, err := _009_leader_board_updateUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "009_leader_board_update.up.sql", size: 1008, mode: os.FileMode(420), modTime: time.Unix(1635959828, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __010_leader_board_update2DownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xed\x8e\x9b\x40\x0c\xfc\x9f\xa7\x98\x7f\x81\xe8\x2e\x09\xa7\x93\xaa\x5e\x7b\xf7\x2a\x68\xd9\x35\x89\xdb\x65\x97\x7a\x4d\x68\xfa\xf4\x15\x9f\x4d\xaf\xa9\x5a\x24\x10\xcb\xd8\x63\x7b\x3c\x58\x21\xa3\x84\x28\x10\x6a\xbd\xb1\x84\x0b\x53\x0f\x1b\x9b\x96\x94\x95\x63\x28\x85\x52\xe7\x35\xc1\x24\x64\x1b\xa0\x67\x3d\xa3\x5a\x4e\x40\x22\x4f\x56\xc7\x57\x20\x69\x14\x73\xa2\xb2\x95\x78\x61\x47\x52\xb2\x7b\x98\xa1\x02\x8f\xa0\xef\x2a\xc6\x6a\x46\x6d\xb4\x67\xd4\x12\x1b\xd8\x4e\x84\x82\x96\xca\x0d\x25\x35\x4d\x8b\x47\x08\x59\xe2\x0b\xb9\xd2\x68\x8e\xc3\xbd\x2c\x0e\x4a\x72\x31\x1e\xdb\x27\xf4\x44\x5f\xd3\x36\x1f\x3a\xaa\x85\xd2\x39\x50\x4a\x4b\xd1\xe1\xb2\x26\x11\xfa\x33\x05\x38\x32\xbe\xb4\x31\xd4\x2c\xcd\xc8\x0e\x4e\x08\x9d\xf7\xd0\x01\x2e\x40\x3e\x11\x8e\xa0\xe0\x50\x1b\xf6\xb4\x36\xff\xdf\x1c\xc7\x89\x63\x8c\x4a\xfc\x83\x0e\x59\xb1\x3f\x7e\x78\xde\xb5\xb1\xcf\x8a\xe3\xc3\xc7\x3c\x1f\xd9\x57\x7c\xe6\x1f\x87\xaa\xd8\xa5\xf9\xfc\x25\x72\x80\xe9\xec\xb0\x80\x84\x18\x46\x6c\x3f\x7f\x28\xd9\xe1\x75\x45\xf7\xec\xe6\xa4\xfe\x4c\x42\xb7\xe2\xe1\xed\xae\xbc\x7f\x8a\x07\x13\x1c\xfa\x18\x96\x71\xa2\x8e\x23\xad\x22\x0e\x70\x36\xf6\x3c\xc9\xf2\x2e\x6e\xb2\xcf\xaf\xb2\x9f\xff\x51\xb6\x80\x33\xd7\xb4\xcd\x37\xc0\x70\xdf\x38\xa8\xda\xff\xd5\x41\xa9\x6b\xb2\x6a\x3f\xd5\x9f\x96\x3d\xb5\x32\xb4\x35\xef\xdb\xc6\x2e\x68\xb6\x1b\xd1\x45\x9e\xb2\x8f\xe1\x0e\xc1\xcb\x4b\xed\xa3\xd1\xc3\x92\x32\x9f\x17\xde\x4e\xa8\x14\xa3\xf4\x5b\xe6\x62\xae\xdd\xca\x72\xb8\xad\xe8\xc8\x9a\x2b\x87\x53\x79\x9f\x60\x5d\xf9\x18\x7c\xe2\x6a\x69\x7a\xb5\xd6\xbb\xa8\xb7\x57\x14\xc7\xa7\xe7\xc9\x57\x2a\x1d\x4d\xd6\xaa\xcd\xf0\x1c\x4c\xf4\xad\x33\x9e\x6b\xa6\x61\xff\x93\x81\x36\xc0\x49\x62\xd7\xa2\xba\xde\xfb\x15\x37\xf9\xa7\x9f\x01\x00\x00\xff\xff\x5c\x31\x52\xfd\xf0\x03\x00\x00")

func _010_leader_board_update2DownSqlBytes() ([]byte, error) {
	return bindataRead(
		__010_leader_board_update2DownSql,
		"010_leader_board_update2.down.sql",
	)
}

func _010_leader_board_update2DownSql() (*asset, error) {
	bytes, err := _010_leader_board_update2DownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "010_leader_board_update2.down.sql", size: 1008, mode: os.FileMode(420), modTime: time.Unix(1636147321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __010_leader_board_update2UpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xdd\x6e\xdb\x3c\x0c\xbd\x6e\x9e\xe2\xdc\xd5\x0e\xd2\xfc\x14\x05\x3e\x7c\x1d\xda\x57\x31\x64\x89\x4e\xb8\xc9\x92\x47\xd1\xf1\xba\xa7\x1f\x2c\xdb\x41\xd6\x79\x17\xbb\xb0\x61\xf9\x90\x87\xe4\xe1\x91\x15\x32\x4a\x88\x02\xa1\xce\x1b\x4b\xb8\x32\x0d\xb0\xb1\xed\x48\x59\x39\x86\x4a\x28\xf5\x5e\x13\x4c\x42\xb1\x01\x06\xd6\x0b\xea\xe5\x04\x24\xf2\x64\x35\x7f\x02\x49\xa3\x98\x33\x55\x9d\xc4\x2b\x3b\x92\x8a\xdd\x6e\x86\x4e\x78\x02\xfd\x50\x31\x56\x0b\xea\xa2\xbd\xa0\x91\xd8\xc2\xf6\x22\x14\xb4\x52\x6e\x29\xa9\x69\x3b\x3c\x41\xc8\x12\x5f\xc9\x55\x46\x4b\x1c\xd6\xb2\x38\x28\xc9\xd5\x78\x3c\x3e\x63\x20\xfa\x96\x1e\xcb\xb1\xa3\x46\x28\x5d\x02\xa5\xb4\x14\xb5\x26\x11\x86\x0b\x05\x38\x32\xbe\xb2\x31\x34\x2c\x6d\x66\x06\x27\x84\xde\x7b\xe8\x08\x9f\x40\x3e\x11\x8e\xa0\xe0\xd0\x18\xf6\xe4\x76\x9b\x87\x87\x7f\x60\x38\x4e\x0c\x39\x2a\xf1\x4f\x3a\x14\xa7\xfd\xf1\xbf\x97\x6d\x17\x87\xe2\x74\xdc\xfd\x5f\x96\x99\xfb\x86\xe7\x0e\xf3\x30\x35\xbb\x34\xf7\xfb\x35\x72\x80\xe9\xed\x28\x7c\x42\x0c\x19\xdb\xcf\x3f\x2a\x76\x78\xbb\xa1\x7b\x76\x39\x69\xb8\x90\xd0\xbd\x64\x78\x5f\x15\xf5\x4f\xc9\xe6\x9a\x26\x38\x0c\x31\x2c\x03\x45\xcd\x43\xdd\x81\xc5\xfa\xe4\x73\xe0\xe8\x9d\x1c\x30\xa9\xf6\x09\x2d\x37\xc0\xf8\xdc\xb9\xa4\xde\xff\xd5\x25\xa9\x6f\x8b\x7a\x3f\x11\x4d\x0b\x9d\x38\x47\xfe\x79\xa7\x36\xf6\x41\x8b\x6d\x46\x17\x29\xaa\x21\x86\x15\x82\xd7\xd7\xc6\x47\xa3\x87\x25\x65\x3e\x2f\xbc\xbd\x50\x25\x46\xe9\xb7\xcc\xc5\x40\xdb\x1b\xcb\xe1\xbe\xa2\x23\x6b\x3e\x38\x9c\xab\x75\x82\xdb\x72\x73\xf0\x99\xeb\xa5\xe9\x9b\x89\x3e\x45\xbd\xbf\xe1\x74\x7c\x7e\x99\x1c\xa4\xd2\xd3\x64\xa2\xc6\x8c\xef\xd1\x2e\xdf\x7b\xe3\xb9\x61\x1a\x77\x3d\x99\x65\x03\x9c\x25\xf6\x1d\xea\x8f\xb5\xeb\xb6\x29\xbf\xfc\x0a\x00\x00\xff\xff\x4e\xef\x69\xe3\xd4\x03\x00\x00")

func _010_leader_board_update2UpSqlBytes() ([]byte, error) {
	return bindataRead(
		__010_leader_board_update2UpSql,
		"010_leader_board_update2.up.sql",
	)
}

func _010_leader_board_update2UpSql() (*asset, error) {
	bytes, err := _010_leader_board_update2UpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "010_leader_board_update2.up.sql", size: 980, mode: os.FileMode(420), modTime: time.Unix(1636147321, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __011_leader_board_update3DownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xdd\x6e\xdb\x3c\x0c\xbd\x6e\x9e\xe2\xdc\xd5\x0e\xd2\xfc\x14\x05\x3e\x7c\x1d\xda\x57\x31\x64\x89\x4e\xb8\xc9\x92\x47\xd1\xf1\xba\xa7\x1f\x2c\xdb\x41\xd6\x79\x17\xbb\xb0\x61\xf9\x90\x87\xe4\xe1\x91\x15\x32\x4a\x88\x02\xa1\xce\x1b\x4b\xb8\x32\x0d\xb0\xb1\xed\x48\x59\x39\x86\x4a\x28\xf5\x5e\x13\x4c\x42\xb1\x01\x06\xd6\x0b\xea\xe5\x04\x24\xf2\x64\x35\x7f\x02\x49\xa3\x98\x33\x55\x9d\xc4\x2b\x3b\x92\x8a\xdd\x6e\x86\x4e\x78\x02\xfd\x50\x31\x56\x0b\xea\xa2\xbd\xa0\x91\xd8\xc2\xf6\x22\x14\xb4\x52\x6e\x29\xa9\x69\x3b\x3c\x41\xc8\x12\x5f\xc9\x55\x46\x4b\x1c\xd6\xb2\x38\x28\xc9\xd5\x78\x3c\x3e\x63\x20\xfa\x96\x1e\xcb\xb1\xa3\x46\x28\x5d\x02\xa5\xb4\x14\xb5\x26\x11\x86\x0b\x05\x38\x32\xbe\xb2\x31\x34\x2c\x6d\x66\x06\x27\x84\xde\x7b\xe8\x08\x9f\x40\x3e\x11\x8e\xa0\xe0\xd0\x18\xf6\xe4\x76\x9b\x87\x87\x7f\x60\x38\x4e\x0c\x39\x2a\xf1\x4f\x3a\x14\xa7\xfd\xf1\xbf\x97\x6d\x17\x87\xe2\x74\xdc\xfd\x5f\x96\x99\xfb\x86\xe7\x0e\xf3\x30\x35\xbb\x34\xf7\xfb\x35\x72\x80\xe9\xed\x28\x7c\x42\x0c\x19\xdb\xcf\x3f\x2a\x76\x78\xbb\xa1\x7b\x76\x39\x69\xb8\x90\xd0\xbd\x64\x78\x5f\x15\xf5\x4f\xc9\xe6\x9a\x26\x38\x0c\x31\x2c\x03\x45\xcd\x43\xdd\x81\xc5\xfa\xe4\x73\xe0\xe8\x9d\x1c\x30\xa9\xf6\x09\x2d\x37\xc0\xf8\xdc\xb9\xa4\xde\xff\xd5\x25\xa9\x6f\x8b\x7a\x3f\x11\x4d\x0b\x9d\x38\x47\xfe\x79\xa7\x36\xf6\x41\x8b\x6d\x46\x17\x29\xaa\x21\x86\x15\x82\xd7\xd7\xc6\x47\xa3\x87\x25\x65\x3e\x2f\xbc\xbd\x50\x25\x46\xe9\xb7\xcc\xc5\x40\xdb\x1b\xcb\xe1\xbe\xa2\x23\x6b\x3e\x38\x9c\xab\x75\x82\xdb\x72\x73\xf0\x99\xeb\xa5\xe9\x9b\x89\x3e\x45\xbd\xbf\xe1\x74\x7c\x7e\x99\x1c\xa4\xd2\xd3\x64\xa2\xc6\x8c\xef\xd1\x2e\xdf\x7b\xe3\xb9\x61\x1a\x77\x3d\x99\x65\x03\x9c\x25\xf6\x1d\xea\x8f\xb5\xeb\xb6\x29\xbf\xfc\x0a\x00\x00\xff\xff\x4e\xef\x69\xe3\xd4\x03\x00\x00")

func _011_leader_board_update3DownSqlBytes() ([]byte, error) {
	return bindataRead(
		__011_leader_board_update3DownSql,
		"011_leader_board_update3.down.sql",
	)
}

func _011_leader_board_update3DownSql() (*asset, error) {
	bytes, err := _011_leader_board_update3DownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "011_leader_board_update3.down.sql", size: 980, mode: os.FileMode(420), modTime: time.Unix(1636147839, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __011_leader_board_update3UpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\x5b\x6e\xdb\x30\x10\xfc\xf7\x29\xe6\xcf\x92\xeb\x3a\x72\x90\xa2\xa8\x8b\xe4\x2a\x04\x45\xae\x6c\x36\x34\xe9\xf2\x61\x21\x3d\x7d\x41\x52\xb6\x94\x44\x49\x5a\x14\xd5\x87\xb0\xe4\xbe\x38\x33\xbb\xc2\x11\x0f\x04\xeb\xe0\xe8\xa4\xb9\x20\x9c\x15\xf5\x10\xf6\x78\xa2\xa0\x82\xb2\x86\x39\xf2\x51\x07\x0f\xee\x51\x2d\x80\x5e\x85\x03\x38\xb8\x4f\x07\xc0\x93\x26\x11\xb2\x09\xf8\x60\x1d\xdf\x13\x3b\x39\x7b\x56\x92\x1c\x53\x72\x3d\xb8\x7a\x25\xc3\x81\xb5\x51\x3c\x52\xa8\x86\x3b\xc0\x91\x20\x75\x26\xc9\x78\x58\x5f\x2f\xab\x52\x13\xdc\x39\xfe\x34\xc6\x8e\xdd\xb0\x27\x43\x8e\x07\x62\x9e\x9c\x22\xff\x3c\x26\x7d\xc6\xf6\x55\xbd\xdb\x05\x75\x24\x1f\xf8\xf1\x84\xcf\x50\x26\x90\x3b\x73\x8d\xe5\x2d\x7a\xa2\x47\xbf\x5c\xe3\xc3\xbc\x99\x90\xe5\x2d\x0e\x36\x3a\xbf\x9c\x78\xea\xab\x5d\x5f\xcc\x1a\x05\x6b\x3e\x76\xce\x1e\xd1\x2a\xe9\xf3\xa9\x3f\x90\xa3\x29\x74\x3c\xfc\xd9\x83\x87\xd2\xdc\x48\xf4\xd6\xa4\x44\xe5\x61\x6c\x80\x89\x5a\x67\xe7\xde\xd9\x78\x42\xfb\x34\xab\xc4\xf8\xa2\x3a\xe3\x6a\x2f\x92\xbe\x50\x31\x3d\x74\xf3\x8e\x94\xe9\x13\xdc\x53\x02\x62\x20\x89\x6b\x26\xac\xe9\x94\x3b\x16\x34\xe9\x51\x51\x6b\x84\xe4\x6e\x40\xda\x13\xb6\x20\x23\xe1\xa3\x10\xe4\xfd\xa5\xd0\xdf\x16\xe1\x51\xa4\x89\xf4\x9b\x1c\xee\xd5\x2f\xba\xa9\xb6\x9b\xe6\xeb\xdd\xea\x64\xfb\x6a\xdb\xac\xbf\xd5\x75\xee\x73\xf5\x0f\x8d\x9e\xf3\x0f\xfc\xb0\xca\x5c\xab\xc1\x9a\x02\x79\xb8\x60\x4a\xe2\x7e\xec\xa5\xe4\x65\x82\x67\x64\x13\xd1\x39\x32\x81\xfd\xab\x6e\xc5\x59\xcd\xd3\x30\x04\xa6\x25\xcd\x01\x1d\x57\xfa\x95\xb7\xce\xb2\x2e\x00\xf1\x96\xaa\xef\x49\xea\xe3\xb1\x6a\x37\x83\x3c\x75\xaa\x30\xd8\x5d\xd4\x2c\x35\x1d\x35\xb3\xd1\x84\x6a\x95\x63\x2e\x1c\xb1\xde\x9a\xf9\x4a\xbb\x5d\xa7\x2d\x0f\x37\x97\xac\xe1\xbc\xda\x36\xcd\xa4\x09\x4b\xbb\x3c\x2d\x70\xd5\x2f\xb7\xd9\xab\x76\x66\x64\x5e\xc4\x3d\xdc\x63\xdb\xdc\xde\x95\x79\x09\x2e\x52\x19\x99\x8e\xa7\x7f\x9a\x89\x9f\x91\x6b\xd5\x29\x92\x93\x8d\xfc\x70\x67\x16\x65\xb7\x27\x44\x8a\xb7\x69\x9c\xa7\xec\x35\x49\xaf\x51\x17\x7a\xca\x7a\xd6\x58\xa1\xd9\x34\x5f\x12\xf2\xd6\x9a\xe8\xdf\x09\xf9\xf4\xac\x56\xca\x08\x36\x70\x5d\x32\x46\xda\xa6\xd0\x33\x70\xb1\x18\xb7\x20\x8d\xff\x2c\xa8\xb4\x04\x73\xf7\x8b\x09\x65\xff\x85\x8d\xf9\x87\x5b\x27\xc9\xa5\x9e\xd7\x4b\x48\xf2\x62\x5d\x20\x0f\x76\x4a\xcd\xe6\xa2\xfe\xfe\x3b\x00\x00\xff\xff\x00\x2c\x81\x58\xdb\x06\x00\x00")

func _011_leader_board_update3UpSqlBytes() ([]byte, error) {
	return bindataRead(
		__011_leader_board_update3UpSql,
		"011_leader_board_update3.up.sql",
	)
}

func _011_leader_board_update3UpSql() (*asset, error) {
	bytes, err := _011_leader_board_update3UpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "011_leader_board_update3.up.sql", size: 1755, mode: os.FileMode(420), modTime: time.Unix(1636147810, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"001_init.down.sql":                           _001_initDownSql,
	"001_init.up.sql":                             _001_initUpSql,
	"002_bids_support_calculating_rates.down.sql": _002_bids_support_calculating_ratesDownSql,
	"002_bids_support_calculating_rates.up.sql":   _002_bids_support_calculating_ratesUpSql,
	"003_auctions_add_client_address.down.sql":    _003_auctions_add_client_addressDownSql,
	"003_auctions_add_client_address.up.sql":      _003_auctions_add_client_addressUpSql,
	"004_bids_add_won_reason.down.sql":            _004_bids_add_won_reasonDownSql,
	"004_bids_add_won_reason.up.sql":              _004_bids_add_won_reasonUpSql,
	"005_auctions_add_providers.down.sql":         _005_auctions_add_providersDownSql,
	"005_auctions_add_providers.up.sql":           _005_auctions_add_providersUpSql,
	"006_consume_bidbot_events.down.sql":          _006_consume_bidbot_eventsDownSql,
	"006_consume_bidbot_events.up.sql":            _006_consume_bidbot_eventsUpSql,
	"007_bids_add_deal_failed_at.down.sql":        _007_bids_add_deal_failed_atDownSql,
	"007_bids_add_deal_failed_at.up.sql":          _007_bids_add_deal_failed_atUpSql,
	"008_leader_board.down.sql":                   _008_leader_boardDownSql,
	"008_leader_board.up.sql":                     _008_leader_boardUpSql,
	"009_leader_board_update.down.sql":            _009_leader_board_updateDownSql,
	"009_leader_board_update.up.sql":              _009_leader_board_updateUpSql,
	"010_leader_board_update2.down.sql":           _010_leader_board_update2DownSql,
	"010_leader_board_update2.up.sql":             _010_leader_board_update2UpSql,
	"011_leader_board_update3.down.sql":           _011_leader_board_update3DownSql,
	"011_leader_board_update3.up.sql":             _011_leader_board_update3UpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"001_init.down.sql":                           &bintree{_001_initDownSql, map[string]*bintree{}},
	"001_init.up.sql":                             &bintree{_001_initUpSql, map[string]*bintree{}},
	"002_bids_support_calculating_rates.down.sql": &bintree{_002_bids_support_calculating_ratesDownSql, map[string]*bintree{}},
	"002_bids_support_calculating_rates.up.sql":   &bintree{_002_bids_support_calculating_ratesUpSql, map[string]*bintree{}},
	"003_auctions_add_client_address.down.sql":    &bintree{_003_auctions_add_client_addressDownSql, map[string]*bintree{}},
	"003_auctions_add_client_address.up.sql":      &bintree{_003_auctions_add_client_addressUpSql, map[string]*bintree{}},
	"004_bids_add_won_reason.down.sql":            &bintree{_004_bids_add_won_reasonDownSql, map[string]*bintree{}},
	"004_bids_add_won_reason.up.sql":              &bintree{_004_bids_add_won_reasonUpSql, map[string]*bintree{}},
	"005_auctions_add_providers.down.sql":         &bintree{_005_auctions_add_providersDownSql, map[string]*bintree{}},
	"005_auctions_add_providers.up.sql":           &bintree{_005_auctions_add_providersUpSql, map[string]*bintree{}},
	"006_consume_bidbot_events.down.sql":          &bintree{_006_consume_bidbot_eventsDownSql, map[string]*bintree{}},
	"006_consume_bidbot_events.up.sql":            &bintree{_006_consume_bidbot_eventsUpSql, map[string]*bintree{}},
	"007_bids_add_deal_failed_at.down.sql":        &bintree{_007_bids_add_deal_failed_atDownSql, map[string]*bintree{}},
	"007_bids_add_deal_failed_at.up.sql":          &bintree{_007_bids_add_deal_failed_atUpSql, map[string]*bintree{}},
	"008_leader_board.down.sql":                   &bintree{_008_leader_boardDownSql, map[string]*bintree{}},
	"008_leader_board.up.sql":                     &bintree{_008_leader_boardUpSql, map[string]*bintree{}},
	"009_leader_board_update.down.sql":            &bintree{_009_leader_board_updateDownSql, map[string]*bintree{}},
	"009_leader_board_update.up.sql":              &bintree{_009_leader_board_updateUpSql, map[string]*bintree{}},
	"010_leader_board_update2.down.sql":           &bintree{_010_leader_board_update2DownSql, map[string]*bintree{}},
	"010_leader_board_update2.up.sql":             &bintree{_010_leader_board_update2UpSql, map[string]*bintree{}},
	"011_leader_board_update3.down.sql":           &bintree{_011_leader_board_update3DownSql, map[string]*bintree{}},
	"011_leader_board_update3.up.sql":             &bintree{_011_leader_board_update3UpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
