allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: standard-mongo
parameters:
  csi.storage.k8s.io/fstype: xfs
  type: pd-balanced
provisioner: pd.csi.storage.gke.io
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo-sidecar
  namespace: broker-staging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: read-pod-service-endpoint
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:serviceaccount:broker-staging:mongo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: read-pod-service-endpoint
subjects:
- kind: ServiceAccount
  name: mongo-sidecar
  namespace: broker-staging
---
apiVersion: v1
data:
  AUCTIONEER_ANNOUNCE_MULTIADDR: /ip4/34.83.24.156/tcp/4001,/ip4/34.83.24.156/udp/4001/quic
  AUCTIONEER_AUCTION_DURATION: "10000000000"
  AUCTIONEER_BROKER_ADDR: broker:5000
  AUCTIONEER_LISTEN_MULTIADDR: /ip4/0.0.0.0/tcp/4001,/ip4/0.0.0.0/udp/4001/quic
  AUCTIONEER_LOG_DEBUG: "true"
  AUCTIONEER_LOG_JSON: "true"
  AUCTIONEER_MONGO_DBNAME: auctioneerd
  AUCTIONEER_MONGO_URI: mongodb://mongo-0.mongo.broker-staging.svc.cluster.local,mongo-1.mongo.broker-staging.svc.cluster.local,mongo-2.mongo.broker-staging.svc.cluster.local:27017/?replicaSet=rs0
  AUCTIONEER_PRIVATE_KEY: mCAESQGVQtjDNgoM80czVoyqa4uQqDk+2dcvezuyGWZuTztjW6/9OR5IJue2qhVFd3y+wB1iuVppAodNdIlY4Bmk0350
  AUCTIONEER_QUIC: "true"
  AUCTIONEER_RPC_ADDR: :5000
  AUTH_LOG_DEBUG: "true"
  AUTH_LOG_JSON: "true"
  AUTH_NEAR_ADDR: near:5000
  AUTH_RPC_ADDR: :5000
  BROKER_AUCTIONEER_ADDR: auctioneer:5000
  BROKER_DEAL_EPOCHS: "1051200"
  BROKER_DEALER_ADDR: dealer:5000
  BROKER_IPFS_MULTIADDR: /dns4/ipfs/tcp/5001
  BROKER_LOG_DEBUG: "true"
  BROKER_LOG_JSON: "true"
  BROKER_MONGO_DBNAME: brokerd
  BROKER_MONGO_URI: mongodb://mongo-0.mongo.broker-staging.svc.cluster.local,mongo-1.mongo.broker-staging.svc.cluster.local,mongo-2.mongo.broker-staging.svc.cluster.local:27017/?replicaSet=rs0
  BROKER_PACKER_ADDR: packer:5000
  BROKER_REPORTER_ADDR: near:5000
  BROKER_RPC_ADDR: :5000
  DEALER_BROKER_ADDR: broker:5000
  DEALER_LOG_DEBUG: "true"
  DEALER_LOG_JSON: "true"
  DEALER_MOCK: "true"
  DEALER_MONGO_DBNAME: dealerd
  DEALER_MONGO_URI: mongodb://mongo-0.mongo.broker-staging.svc.cluster.local,mongo-1.mongo.broker-staging.svc.cluster.local,mongo-2.mongo.broker-staging.svc.cluster.local:27017/?replicaSet=rs0
  DEALER_RPC_ADDR: :5000
  NEAR_LOG_DEBUG: "true"
  NEAR_LOG_JSON: "true"
  NEAR_RPC_ADDR: :5000
  PACKER_BROKER_ADDR: broker:5000
  PACKER_IPFS_MULTIADDR: /dns4/ipfs/tcp/5001
  PACKER_LOG_DEBUG: "true"
  PACKER_LOG_JSON: "true"
  PACKER_MONGO_DBNAME: packerd
  PACKER_MONGO_URI: mongodb://mongo-0.mongo.broker-staging.svc.cluster.local,mongo-1.mongo.broker-staging.svc.cluster.local,mongo-2.mongo.broker-staging.svc.cluster.local:27017/?replicaSet=rs0
  PACKER_RPC_ADDR: :5000
  STORAGE_AUTH_ADDR: auth:5000
  STORAGE_BROKER_ADDR: broker:5000
  STORAGE_HTTP_ADDR: :8888
  STORAGE_LOG_DEBUG: "true"
  STORAGE_LOG_JSON: "true"
  STORAGE_UPLOADER_IPFS_MULTIADDR: /dns4/ipfs/tcp/5001
kind: ConfigMap
metadata:
  name: config-01
---
apiVersion: v1
kind: Service
metadata:
  name: auctioneer-swarm
spec:
  ports:
  - name: swarm
    port: 4001
  selector:
    app: auctioneer-v1
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: auctioneer
spec:
  ports:
  - name: api
    port: 5000
  - name: metrics
    port: 9090
  selector:
    app: auctioneer-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: auth
spec:
  ports:
  - name: api
    port: 5000
  - name: metrics
    port: 9090
  selector:
    app: auth-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: broker
spec:
  ports:
  - name: api
    port: 5000
  - name: metrics
    port: 9090
  selector:
    app: broker-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: dealer
spec:
  ports:
  - name: api
    port: 5000
  - name: metrics
    port: 9090
  selector:
    app: dealer-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: ipfs-swarm
spec:
  ports:
  - name: swarm
    port: 4001
  selector:
    app: ipfs
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: ipfs
spec:
  ports:
  - name: api
    port: 5001
  - name: swarm
    port: 4001
  selector:
    app: ipfs
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  clusterIP: None
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    role: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: near
spec:
  ports:
  - name: api
    port: 5000
  - name: metrics
    port: 9090
  selector:
    app: near-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: packer
spec:
  ports:
  - name: api
    port: 5000
  - name: metrics
    port: 9090
  selector:
    app: packer-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: storage
spec:
  ports:
  - name: api
    port: 8888
  - name: metrics
    port: 9090
  selector:
    app: storage-v1
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: auth
  name: auth-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-v1
  template:
    metadata:
      labels:
        app: auth-v1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config-01
        image: textile/auth:sha-89d8656
        imagePullPolicy: Always
        name: auth
        ports:
        - containerPort: 5000
          name: api
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: "0.6"
            memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: broker
  name: broker-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker-v1
  template:
    metadata:
      labels:
        app: broker-v1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config-01
        image: textile/broker:sha-89d8656
        imagePullPolicy: Always
        name: broker
        ports:
        - containerPort: 5000
          name: api
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: "0.6"
            memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dealer
  name: dealer-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dealer-v1
  template:
    metadata:
      labels:
        app: dealer-v1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config-01
        image: textile/dealer:sha-89d8656
        imagePullPolicy: Always
        name: dealer
        ports:
        - containerPort: 5000
          name: api
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: "0.6"
            memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: near
  name: near-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: near-v1
  template:
    metadata:
      labels:
        app: near-v1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config-01
        image: textile/near:sha-89d8656
        imagePullPolicy: Always
        name: near
        ports:
        - containerPort: 5000
          name: api
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: "0.6"
            memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: packer
  name: packer-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: packer-v1
  template:
    metadata:
      labels:
        app: packer-v1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config-01
        image: textile/packer:sha-89d8656
        imagePullPolicy: Always
        name: packer
        ports:
        - containerPort: 5000
          name: api
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: "0.6"
            memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: storage
  name: storage-01
spec:
  replicas: 3
  selector:
    matchLabels:
      app: storage-v1
  template:
    metadata:
      labels:
        app: storage-v1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config-01
        image: textile/storage:sha-89d8656
        imagePullPolicy: Always
        name: storage
        ports:
        - containerPort: 8888
          name: api
        - containerPort: 9090
          name: metrics
        readinessProbe:
          httpGet:
            path: /health
            port: api
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: "0.6"
            memory: 100Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: auctioneer
  name: auctioneer-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auctioneer-v1
  serviceName: auctioneer
  template:
    metadata:
      labels:
        app: auctioneer-v1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config-01
        image: textile/auctioneer:sha-${GITHUB_SHA}
        imagePullPolicy: Always
        name: auctioneer
        ports:
        - containerPort: 5000
          name: api
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            memory: 6Gi
          requests:
            cpu: "2"
            memory: 4Gi
        volumeMounts:
        - mountPath: /data/auctioneerd
          name: auctioneer-store
      securityContext:
        fsGroup: 2000
        runAsGroup: 2000
        runAsUser: 1000
      terminationGracePeriodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: auctioneer-store
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: ipfs
  name: ipfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ipfs
  serviceName: ipfs
  template:
    metadata:
      labels:
        app: ipfs
    spec:
      containers:
      - args:
        - daemon
        - --migrate
        - --enable-namesys-pubsub
        command:
        - /usr/local/bin/start_ipfs
        image: ipfs/go-ipfs:v0.8.0
        name: ipfs
        ports:
        - containerPort: 5001
          name: api
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: "2"
            memory: 1Gi
        volumeMounts:
        - mountPath: /data/ipfs
          name: ipfs-store
      terminationGracePeriodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: ipfs-store
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  replicas: 3
  selector:
    matchLabels:
      environment: staging
      role: mongo
  serviceName: mongo
  template:
    metadata:
      labels:
        environment: staging
        role: mongo
    spec:
      automountServiceAccountToken: true
      containers:
      - command:
        - mongod
        - --bind_ip_all
        - --replSet
        - rs0
        image: mongo:4.4
        name: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: mongo-store
      - env:
        - name: KUBERNETES_POD_LABELS
          value: role=mongo,environment=staging
        - name: KUBERNETES_SERVICE_NAME
          value: mongo
        image: morphy/k8s-mongo-sidecar:0.5.1
        name: mongo-sidecar
      serviceAccountName: mongo-sidecar
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: mongo-store
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      storageClassName: standard-mongo
---
apiVersion: batch/v1
kind: Job
metadata:
  name: uploadbot
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: uploadbot
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - "npm install -g near-cli\nwget -O bench.sh https://raw.githubusercontent.com/textileio/broker-core/main/cmd/storaged/bench.sh?token=ABO2DNKW6N77JH6UBXGDLL3AUUL72
          \nchmod 755 bench.sh\n./bench.sh $ENDPOINT $MIN_SIZE $MAX_SIZE $COUNT $SLEEP\n"
        env:
        - name: COUNT
          value: "1000000000"
        - name: MIN_SIZE
          value: "1000"
        - name: MAX_SIZE
          value: "100000"
        - name: ENDPOINT
          value: http://storage:8888
        - name: SLEEP
          value: "3"
        - name: SEED_PHRASE
          value: height unusual narrow dream follow grow rebel panda because then
            equip basic
        image: node:16-buster
        name: uploadbot
      restartPolicy: OnFailure
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: broker-staging-textile-dev
  namespace: broker-staging
spec:
  domains:
  - broker.staging.textile.dev
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: lb-broker-staging-ipv4-1
    networking.gke.io/managed-certificates: broker-staging-textile-dev
  name: broker-ingress
  namespace: broker-staging
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: storage
          servicePort: 8888
        path: /upload
      - backend:
          serviceName: storage
          servicePort: 8888
        path: /storagerequest/*
